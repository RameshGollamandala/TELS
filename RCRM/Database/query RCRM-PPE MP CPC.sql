WITH ATTRIBUTES AS(
    SELECT D.FILENAME, D.RECORDNUMBER, D.ORDER_NUMBER, D.ROW_ID ATTRIBUTE_OWNER_ROW_ID, D.ATTRIBUTE_ROW_ID, D.ATTRIBUTE_ACTION_CODE, D.ATTRIBUTE_DISPLAY_NAME, D.ATTRIBUTE_VALUE
    FROM TELS_RCRM_ATTRIBUTES_VIEW D
    WHERE D.ATTRIBUTE_ROW_ID IS NOT NULL)
, MP_OLI AS(
    SELECT * FROM TELS_RCRM_ORDERS_VIEW WHERE REC_TYPE = 'MP_OLI')
, MP_ASSOC_MOLI AS(
    SELECT * FROM TELS_RCRM_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_MOLI')
, MP_ASSOC_SIM_OLI AS(
    SELECT * FROM TELS_RCRM_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_SIM_OLI')
, MP_ASSOC_HW_OLI AS(
    SELECT * FROM TELS_RCRM_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_HW_OLI')
, MP_ASSOC_FHW_OLI AS(
    SELECT * FROM TELS_RCRM_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_FHW_OLI')
, MP_ASSOC_MAIN_CONT_ADD_OLI AS(
    SELECT * FROM TELS_RCRM_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_MAIN_CONT_ADD_OLI')
, MP_ASSOC_MAIN_CONT_DEL_OLI AS(
    SELECT * FROM TELS_RCRM_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_MAIN_CONT_DEL_OLI')
, MP_ASSOC_MAIN_PLAN_DEL_OLI AS( 
    SELECT * FROM TELS_RCRM_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_MAIN_PLAN_DEL_OLI')
, MP_ASSOC_CONTRACT_ADD_OLI AS(
    SELECT * FROM TELS_RCRM_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_CONTRACT_ADD_OLI')
, MP_ASSOC_CONTRACT_DEL_OLI AS(
    SELECT * FROM TELS_RCRM_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_CONTRACT_DEL_OLI')
, MP_ASSOC_CONVERT_PLAN_OLI AS( 
    SELECT * FROM TELS_RCRM_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_CONVERT_PLAN_OLI')
, LT_SALES_TYPE_MAIN_PLAN AS(
    SELECT LT.STARTDATE, LT.ENDDATE, LT.DIM_NAME_0, LT.IDX_NAME_0, LT.DIM_NAME_1, LT.IDX_NAME_1, LT.DIM_NAME_2, LT.IDX_NAME_2, LT.DIM_NAME_3, LT.IDX_NAME_3, LT.DIM_NAME_4, LT.IDX_NAME_4, LT.DIM_NAME_5, LT.IDX_NAME_5, LT.DIM_NAME_6, LT.IDX_NAME_6, LT.DIM_NAME_7, LT.IDX_NAME_7, LT.DIM_NAME_8, LT.IDX_NAME_8, LT.STRINGVALUE
    FROM TELS_RCRM_MV_MDLT LT
    WHERE NAME = 'LT_Sales_Type_Main_Plan')
, LT_PPM_UPSELL AS(
    SELECT LT.STARTDATE, LT.ENDDATE, LT.DIM_NAME_0, LT.IDX_NAME_0, LT.VALUE
    FROM TELS_RCRM_MV_MDLT LT
    WHERE NAME = 'LT_PPM_Upsell')
, LT_PLAN_VAS_HW_RO AS(
    SELECT LT.STARTDATE, LT.ENDDATE, LT.DIM_NAME_0, LT.IDX_NAME_0, LT.DIM_NAME_1, LT.IDX_NAME_1, LT.STRINGVALUE
    FROM TELS_RCRM_MV_MDLT LT
    WHERE NAME = 'LT_Plan_VAS_HW_RO')
, LT_PPM_PRODUCT_ELIGIBILITY AS(
    SELECT LT.STARTDATE, LT.ENDDATE, LT.DIM_NAME_0, LT.IDX_NAME_0, LT.DIM_NAME_1, LT.IDX_NAME_1, LT.DIM_NAME_2, LT.IDX_NAME_2,  LT.STRINGVALUE
    FROM TELS_RCRM_MV_MDLT LT
    WHERE NAME = 'LT_PPM_Product_Eligibility')
, LT_ALLOWABLE_RECON_PERIOD AS(
    SELECT LT.STARTDATE, LT.ENDDATE, LT.DIM_NAME_0, LT.IDX_NAME_0, LT.DIM_NAME_1, LT.IDX_NAME_1, LT.VALUE
    FROM TELS_RCRM_MV_MDLT LT
    WHERE NAME = 'LT_Allowable_Recon_Period')
, PRODUCT AS(
    SELECT CLS.NAME, PRD.GENERICATTRIBUTE1 
    FROM   
      CS_CATEGORYTREE@TC_LINK CTR 
      JOIN CS_CATEGORY_CLASSIFIERS@TC_LINK CCL ON
        CCL.REMOVEDATE = TO_DATE('01-01-2200','DD-MM-YYYY')
        AND CCL.CATEGORYTREESEQ = CTR.CATEGORYTREESEQ
        AND CCL.TENANTID = CTR.TENANTID
      JOIN CS_CLASSIFIER@TC_LINK CLS ON
        CLS.REMOVEDATE = TO_DATE('01-01-2200','DD-MM-YYYY')
        AND CLS.CLASSIFIERSEQ = CCL.CLASSIFIERSEQ
        AND CLS.TENANTID = CCL.TENANTID
      JOIN CS_PRODUCT@TC_LINK PRD ON
        PRD.REMOVEDATE = TO_DATE('01-01-2200','DD-MM-YYYY')
        AND PRD.CLASSIFIERSEQ = CLS.CLASSIFIERSEQ
        AND PRD.TENANTID = CLS.TENANTID
    WHERE
        CTR.REMOVEDATE = TO_DATE('01-01-2200','DD-MM-YYYY')
        AND CTR.TENANTID = 'TELS'
        AND CTR.NAME = 'Product_Category'
    GROUP BY CLS.NAME, PRD.GENERICATTRIBUTE1) -- !!! Needs to be fixed for effective dating
, PASS1 AS(
SELECT --Pass1. Get all the simple columns here
    MO.FILENAME,
    MO.BATCHPROCESSDATE,
    MO.RECORDNUMBER,
    MPAM.PROVISIONED_DATE PROCESSED_DATE,
    NULL PROCESSED_PERIOD_ID,
    MO.LIST_PRICE TRANSACTION_AMOUNT,
    '1' QUANTITY,
    MPAM.CUSTOMER_LAST_NAME ATTRIBUTE1,
    MPAM.CUSTOMER_FIRST_NAME ATTRIBUTE2,
    NULL ATTRIBUTE3,NULL ATTRIBUTE4,NULL ATTRIBUTE5,NULL ATTRIBUTE6,NULL ATTRIBUTE7,NULL ATTRIBUTE8,NULL ATTRIBUTE9,NULL ATTRIBUTE10,NULL ATTRIBUTE11,NULL ATTRIBUTE12,NULL ATTRIBUTE13,NULL ATTRIBUTE14,NULL ATTRIBUTE15,NULL ATTRIBUTE16,NULL ATTRIBUTE17,NULL ATTRIBUTE18,NULL ATTRIBUTE19,NULL ATTRIBUTE20,
    CASE WHEN MO.ACTION_CODE = 'Add' AND MMCAO.ACTION_CODE = 'Add'
         THEN A4.ATTRIBUTE_VALUE 
         END ATTRIBUTE21,
    CASE WHEN MO.ACTION_CODE = 'Add' AND MMCAO.ACTION_CODE = 'Add' AND A5.ATTRIBUTE_VALUE IS NOT NULL 
         THEN A5.ATTRIBUTE_VALUE
         WHEN MO.ACTION_CODE = 'Add' AND MMCAO.ACTION_CODE = 'Add'
         THEN MMPDO.PART_NUMBER
         END ATTRIBUTE22,
    CASE WHEN MO.ACTION_CODE = 'Add' AND MMCAO.ACTION_CODE = 'Add' AND A6.ATTRIBUTE_VALUE IS NOT NULL 
         THEN A6.ATTRIBUTE_VALUE
         WHEN MO.ACTION_CODE = 'Add' AND MMCAO.ACTION_CODE = 'Add' AND A7.ATTRIBUTE_VALUE IS NOT NULL 
         THEN A7.ATTRIBUTE_VALUE
         END ATTRIBUTE23,
    NULL ATTRIBUTE24,
    MPAM.ORDER_NUMBER ATTRIBUTE25,
    MPAM.BILLING_ACCOUNT ATTRIBUTE26,
    MPAM.PARTNER_CODE ATTRIBUTE27,
    NULL ATTRIBUTE28,NULL ATTRIBUTE29,NULL ATTRIBUTE30,NULL ATTRIBUTE31,NULL ATTRIBUTE32,NULL ATTRIBUTE33,NULL ATTRIBUTE34,
    MPAM.BUSINESS_UNIT ATTRIBUTE35,
    MPAM.SALES_FORCE_ID ATTRIBUTE36,
    'COMMISSIONABLE TRANSACTION' ATTRIBUTE37,
    MPAM.SOURCE_SYSTEM ATTRIBUTE38,
    MPAM.PRODUCT ATTRIBUTE39,
    NULL ATTRIBUTE40,
    MPAM.ACTION_CODE ATTRIBUTE41,
    MPAM.TRANSFER_TYPE ATTRIBUTE42,
    MPAM.EVENT_SOURCE ATTRIBUTE43,
    MPAM.PROMOTION_PART_NUMBER ATTRIBUTE44,
    MPAM.ORDER_SUB_TYPE ATTRIBUTE45,
    MO.ROW_ID ATTRIBUTE46,
    MO.PRODUCT ATTRIBUTE47,
    NULL ATTRIBUTE48,
    MO.ACTION_CODE ATTRIBUTE49,
    MO.PROMOTION_PART_NUMBER ATTRIBUTE50,
    NULL ATTRIBUTE51,NULL ATTRIBUTE52,NULL ATTRIBUTE53/*Determined in Pass2*/,  NULL ATTRIBUTE54,NULL ATTRIBUTE55,NULL ATTRIBUTE56,
    CASE WHEN A3.ATTRIBUTE_ACTION_CODE IS NOT NULL
         THEN A3.ATTRIBUTE_ACTION_CODE
         END ATTRIBUTE57,
    A3.ATTRIBUTE_VALUE ATTRIBUTE58,
    NULL ATTRIBUTE59,
    CASE WHEN MPAM.ORDER_TYPE = 'Modify' AND MPAM.SUB_ACTION_CODE IN('Move-Add','Move-Delete')
         THEN 'Move'
         WHEN MPAM.ORDER_TYPE = 'Modify' AND MPAM.SUB_ACTION_CODE IN('Transition-Add','Transition-Delete')
         THEN 'Add New Service'
         ELSE MPAM.ORDER_TYPE 
         END ATTRIBUTE60,
    MMCAO.ACTION_CODE ATTRIBUTE61,
    MMCAO.CONTRACT_START_DATE ATTRIBUTE62,
    NULL ATTRIBUTE63,NULL ATTRIBUTE64,
    REPLACE(A2.ATTRIBUTE_VALUE,' Months') ATTRIBUTE65,
    NULL ATTRIBUTE66,
    CASE WHEN A8.ATTRIBUTE_VALUE IS NOT NULL AND LT3.STRINGVALUE = 'Yes' AND LT4.STRINGVALUE = 'Yes'
         THEN A8.ATTRIBUTE_VALUE
         WHEN A8I.ATTRIBUTE_VALUE IS NOT NULL AND LT3.STRINGVALUE = 'Yes' AND LT4.STRINGVALUE = 'Yes'
         THEN A8I.ATTRIBUTE_VALUE
         WHEN LT3.STRINGVALUE = 'Yes' AND LT4.STRINGVALUE = 'Yes'
         THEN MAFO.HARDWARE_SUPPLIED_FLAG
         ELSE MO.HARDWARE_SUPPLIED_FLAG
         END ATTRIBUTE67,  
    NULL ATTRIBUTE68,
    MMCDO.CONTRACT_START_DATE ATTRIBUTE69,
    NULL ATTRIBUTE70,NULL ATTRIBUTE71,
    CASE WHEN IS_NUMBER(A1.ATTRIBUTE_VALUE) = 1 THEN A1.ATTRIBUTE_VALUE ELSE '0' END ATTRIBUTE72,
    NULL ATTRIBUTE73,NULL ATTRIBUTE74,NULL ATTRIBUTE75,NULL ATTRIBUTE76,NULL ATTRIBUTE77,
    NVL(LT1.STRINGVALUE,'Non-Classified') ATTRIBUTE78, /*Override Determined in Pass2*/
    NULL ATTRIBUTE79/*Determined in Pass2*/,
    NULL ATTRIBUTE80,
    MO.PART_NUMBER ATTRIBUTE81,
    NULL ATTRIBUTE82,NULL ATTRIBUTE83,NULL ATTRIBUTE84,NULL ATTRIBUTE85,NULL ATTRIBUTE86,NULL ATTRIBUTE87,
    MO.COMMISSION_PRODUCT_TYPE ATTRIBUTE88,
    NULL ATTRIBUTE89,NULL ATTRIBUTE90,
    MAHO.PART_NUMBER ATTRIBUTE91,
    MAHO.PRODUCT ATTRIBUTE92,
    NULL ATTRIBUTE93, /* ATTRIBUTE94 Determined further on*/
    NULL ATTRIBUTE95,NULL ATTRIBUTE96,NULL ATTRIBUTE97,NULL ATTRIBUTE98,NULL ATTRIBUTE99,NULL ATTRIBUTE100,
    NULL LAST_UPDATE_DATE,NULL CREATION_DATE,
    MPAM.CREATED_DATE BOOKED_DATE,
    'REVENUE' REVENUE_TYPE,
    NULL TYPE,NULL EMPLOYEE_NUMBER,NULL RECORD_STATUS,NULL ERROR_TYPE,
    CASE WHEN IS_NUMBER(A1.ATTRIBUTE_VALUE) = 0
         THEN 'MP_ASSOC_MAIN_CONT_DEL_OLI Contract Term is not a number: ' || A1.ATTRIBUTE_VALUE || ' '
         END ERROR_MSG,
    MO.SOURCE_SYSTEM SOURCE,
    MPAM.SUBMITTED_DATE SUBMITTED_DATE,
    MPAM.STATUS_HEADER STATUS_HEADER,
    MPAM.STATUS_ORDER_LINE_ITEM STATUS_ORDER_LINE_ITEM,
    MPAM.ORIGINAL_ORDER_NUMBER,
    MO.PROMOTION_INTEGRATION_ID MO_PROMOTION_INTEGRATION_ID,
    MO.EFFECTIVE_DATE EFFECTIVE_DATE,
    MMCAO.ROW_ID MCAO_ROW_ID,
    MO.PART_NUMBER,
    CASE WHEN MPAM.PRODUCT <> 'Mobile Service' AND MPAM.ORDER_TYPE <> 'Add New Service'
         THEN NULL
         ELSE MPAM.REASON_CODE
         END REASON_CODE,
    A10.ATTRIBUTE_VALUE MCAO_REDEEMED,
    CEIL(MONTHS_BETWEEN(TRUNC(TO_DATE(MMCAO.CONTRACT_START_DATE,'dd/mm/yyyy hh24:mi:ss')),TRUNC(TO_DATE(MMCDO.CONTRACT_START_DATE,'dd/mm/yyyy hh24:mi:ss')))) A94_M,
    CEIL(TRUNC(TO_DATE(MMCAO.CONTRACT_START_DATE,'dd/mm/yyyy hh24:mi:ss')) - TRUNC(TO_DATE(MMCDO.CONTRACT_START_DATE,'dd/mm/yyyy hh24:mi:ss'))) A94_D,
    LT2.VALUE LT_PPM_UPSELL_VALUE
FROM 
  MP_OLI MO
  JOIN MP_ASSOC_MOLI               MPAM ON MPAM.ORDER_NUMBER = MO.ORDER_NUMBER AND MPAM.STATUS_HEADER = MO.STATUS_HEADER AND MPAM.ROW_ID = MO.ROOT_ITEM_ROW_ID
  LEFT JOIN MP_ASSOC_SIM_OLI            MASO ON MASO.ORDER_NUMBER = MO.ORDER_NUMBER AND MASO.STATUS_HEADER = MO.STATUS_HEADER AND MASO.ROOT_ITEM_ROW_ID = MO.ROOT_ITEM_ROW_ID
  LEFT JOIN MP_ASSOC_FHW_OLI            MAFO ON MAFO.ORDER_NUMBER = MO.ORDER_NUMBER AND MAFO.STATUS_HEADER = MO.STATUS_HEADER AND MAFO.ROOT_ITEM_ROW_ID = MO.ROOT_ITEM_ROW_ID
  LEFT JOIN MP_ASSOC_HW_OLI             MAHO ON MAHO.ORDER_NUMBER = MO.ORDER_NUMBER AND MAHO.STATUS_HEADER = MO.STATUS_HEADER AND MAHO.ROOT_ITEM_ROW_ID = MO.ROOT_ITEM_ROW_ID AND MAHO.PRODUCT <> 'ARO Accessory'
  LEFT JOIN MP_ASSOC_CONTRACT_ADD_OLI   MCAO ON MCAO.ORDER_NUMBER = MO.ORDER_NUMBER AND MCAO.STATUS_HEADER = MO.STATUS_HEADER AND MCAO.ROOT_ITEM_ROW_ID = MO.ROOT_ITEM_ROW_ID AND MCAO.PRODUCT IN('Device Lease Contract','Device Payment Contract')
  LEFT JOIN MP_ASSOC_MAIN_CONT_ADD_OLI MMCAO ON MMCAO.ORDER_NUMBER = MO.ORDER_NUMBER AND MMCAO.STATUS_HEADER = MO.STATUS_HEADER AND MMCAO.ROOT_ITEM_ROW_ID = MO.ROOT_ITEM_ROW_ID
  LEFT JOIN MP_ASSOC_MAIN_CONT_DEL_OLI MMCDO ON MMCDO.ORDER_NUMBER = MO.ORDER_NUMBER AND MMCDO.STATUS_HEADER = MO.STATUS_HEADER AND MMCDO.ROOT_ITEM_ROW_ID = MO.ROOT_ITEM_ROW_ID
  LEFT JOIN MP_ASSOC_MAIN_PLAN_DEL_OLI MMPDO ON MMPDO.ORDER_NUMBER = MO.ORDER_NUMBER AND MMPDO.STATUS_HEADER = MO.STATUS_HEADER AND MMPDO.ROOT_ITEM_ROW_ID = MO.ROOT_ITEM_ROW_ID
  LEFT JOIN ATTRIBUTES                    A1 ON A1.ATTRIBUTE_OWNER_ROW_ID = MMCDO.ROW_ID AND A1.ORDER_NUMBER = MMCDO.ORDER_NUMBER AND A1.ATTRIBUTE_DISPLAY_NAME = 'Contract Term'
  LEFT JOIN ATTRIBUTES                    A2 ON A2.ATTRIBUTE_OWNER_ROW_ID = MMCAO.ROW_ID AND A2.ORDER_NUMBER = MMCAO.ORDER_NUMBER AND A2.ATTRIBUTE_DISPLAY_NAME = 'Contract Term'
  LEFT JOIN ATTRIBUTES                    A3 ON A3.ATTRIBUTE_OWNER_ROW_ID = MASO.ROW_ID AND A3.ORDER_NUMBER = MASO.ORDER_NUMBER AND A3.ATTRIBUTE_DISPLAY_NAME = 'Network Type'
  LEFT JOIN ATTRIBUTES                    A4 ON A4.ATTRIBUTE_OWNER_ROW_ID = MMCAO.ROW_ID AND A4.ORDER_NUMBER = MMCAO.ORDER_NUMBER AND A4.ATTRIBUTE_DISPLAY_NAME = 'Minimum Spend'
  LEFT JOIN ATTRIBUTES                    A5 ON A5.ATTRIBUTE_OWNER_ROW_ID = MMCDO.ROW_ID AND A5.ORDER_NUMBER = MMCDO.ORDER_NUMBER AND A5.ATTRIBUTE_DISPLAY_NAME = 'Plan ID'
  LEFT JOIN ATTRIBUTES                    A6 ON A6.ATTRIBUTE_OWNER_ROW_ID = MMCDO.ROW_ID AND A6.ORDER_NUMBER = MMCDO.ORDER_NUMBER AND A6.ATTRIBUTE_DISPLAY_NAME = 'Minimum Spend'
  LEFT JOIN ATTRIBUTES                    A7 ON A7.ATTRIBUTE_OWNER_ROW_ID = MMPDO.ROW_ID AND A7.ORDER_NUMBER = MMPDO.ORDER_NUMBER AND A7.ATTRIBUTE_DISPLAY_NAME = 'Minimum Spend'
  LEFT JOIN ATTRIBUTES                    A8 ON A8.ATTRIBUTE_OWNER_ROW_ID = MAFO.ROW_ID AND A8.ORDER_NUMBER = MAFO.ORDER_NUMBER AND A8.ATTRIBUTE_DISPLAY_NAME LIKE 'Supplied in Store%'
  LEFT JOIN ATTRIBUTES                   A8I ON A8I.ATTRIBUTE_OWNER_ROW_ID = MAFO.ROW_ID AND A8I.ORDER_NUMBER = MAFO.ORDER_NUMBER AND A8I.ATTRIBUTE_DISPLAY_NAME LIKE 'Hardware Supplied'
  LEFT JOIN ATTRIBUTES                    A9 ON A9.ATTRIBUTE_OWNER_ROW_ID = MCAO.ROW_ID AND A9.ORDER_NUMBER = MCAO.ORDER_NUMBER AND A9.ATTRIBUTE_DISPLAY_NAME = 'Plan ID' AND A9.ATTRIBUTE_VALUE = MO.PART_NUMBER
  LEFT JOIN ATTRIBUTES                   A10 ON A10.ATTRIBUTE_OWNER_ROW_ID = A9.ATTRIBUTE_OWNER_ROW_ID AND A10.ORDER_NUMBER = A9.ORDER_NUMBER AND A10.ATTRIBUTE_DISPLAY_NAME = 'Redeemed' AND A10.ATTRIBUTE_VALUE IN('Yes','DLC Redeemed','DPC Redeemed')
  LEFT JOIN LT_SALES_TYPE_MAIN_PLAN      LT1 ON LT1.IDX_NAME_0 = NVL(CASE WHEN MPAM.ORDER_TYPE = 'Modify' AND MPAM.SUB_ACTION_CODE IN('Move-Add','Move-Delete') THEN 'Move'
                                                                          WHEN MPAM.ORDER_TYPE = 'Modify' AND MPAM.SUB_ACTION_CODE IN('Transition-Add','Transition-Delete') THEN 'Add New Service'
                                                                          ELSE MPAM.ORDER_TYPE END,'NULL')     
                                             AND LT1.IDX_NAME_1 = NVL(MPAM.ORDER_SUB_TYPE,'NULL') 
                                             AND LT1.IDX_NAME_2 = NVL(MPAM.TRANSFER_TYPE,'NULL') AND LT1.IDX_NAME_3 = NVL(MPAM.ACTION_CODE,'NULL') 
                                             AND LT1.IDX_NAME_4 = NVL(MO.ACTION_CODE,'NULL')     AND LT1.IDX_NAME_5 = NVL(MMCAO.ACTION_CODE,'NULL') 
                                             AND LT1.IDX_NAME_6 = NVL(MMCDO.ACTION_CODE,'NULL')  AND LT1.IDX_NAME_7 = NVL(MO.COMMISSION_PRODUCT_TYPE,'NULL')
                                             AND LT1.IDX_NAME_8 = NVL(CASE WHEN MPAM.PRODUCT = 'Mobile Service' AND MPAM.REASON_CODE = 'Migration to Siebel' AND MPAM.ORDER_TYPE = 'Add New Service' THEN MPAM.REASON_CODE ELSE NULL END,'NULL')
                                             AND LT1.STARTDATE <= TO_DATE(NVL(MPAM.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND LT1.ENDDATE > TO_DATE(NVL(MPAM.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss')
  LEFT JOIN LT_PPM_UPSELL                LT2 ON LT2.IDX_NAME_0 = LT1.STRINGVALUE AND LT2.STARTDATE <= TO_DATE(NVL(MO.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND LT2.ENDDATE > TO_DATE(NVL(MO.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss')
  LEFT JOIN LT_PLAN_VAS_HW_RO            LT3 ON LT3.IDX_NAME_0 = MAFO.PART_NUMBER AND LT3.IDX_NAME_1 = 'PLAN HW' AND LT3.STRINGVALUE = 'Yes' AND LT3.STARTDATE <= TO_DATE(NVL(MAFO.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND LT3.ENDDATE > TO_DATE(NVL(MAFO.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss')
  LEFT JOIN LT_PLAN_VAS_HW_RO            LT4 ON LT4.IDX_NAME_0 = MO.PART_NUMBER AND LT4.IDX_NAME_1 = 'PLAN' AND LT4.STRINGVALUE = 'Yes' AND LT4.STARTDATE <= TO_DATE(NVL(MAFO.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND LT4.ENDDATE > TO_DATE(NVL(MAFO.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss')
WHERE NVL(MO.ORDER_SUB_TYPE,'NULL') <> 'Transfer' 
  AND (MO.NGB_PROD_TYPE = 'CPC' OR (MO.NGB_PROD_TYPE = 'Shared' AND MPAM.COMMISSION_PRODUCT_TYPE IS NULL))
  AND NOT EXISTS (
    SELECT 1
    FROM MP_ASSOC_CONVERT_PLAN_OLI MACPO
    WHERE MACPO.ORDER_NUMBER = MO.ORDER_NUMBER
    AND MACPO.STATUS_HEADER = MO.STATUS_HEADER
    AND MACPO.ROOT_ITEM_ROW_ID = MO.ROOT_ITEM_ROW_ID)
--  AND MO.ROW_ID = '1-O6LTRAJA'
--  AND MO.ORDER_NUMBER = '1-1802351725313' -- DEBUGGING
) 
, PASS2 AS(
SELECT
    P1.FILENAME,P1.BATCHPROCESSDATE,P1.RECORDNUMBER,P1.PROCESSED_DATE,P1.PROCESSED_PERIOD_ID,P1.TRANSACTION_AMOUNT,P1.QUANTITY,P1.ATTRIBUTE1,P1.ATTRIBUTE2,P1.ATTRIBUTE3,P1.ATTRIBUTE4,P1.ATTRIBUTE5,P1.ATTRIBUTE6,P1.ATTRIBUTE7,P1.ATTRIBUTE8,P1.ATTRIBUTE9,P1.ATTRIBUTE10,P1.ATTRIBUTE11,
    P1.ATTRIBUTE12,P1.ATTRIBUTE13,P1.ATTRIBUTE14,P1.ATTRIBUTE15,P1.ATTRIBUTE16,P1.ATTRIBUTE17,P1.ATTRIBUTE18,P1.ATTRIBUTE19,P1.ATTRIBUTE20,P1.ATTRIBUTE21,
    CASE WHEN P1.ATTRIBUTE78 = 'Recontract Migration'
         THEN 'Migration'
         WHEN P1.ATTRIBUTE78 = 'Recon - Previous Uncontracted' AND P1.ATTRIBUTE45 = 'Pre to Post'
         THEN 'Pre Paid'
         ELSE P1.ATTRIBUTE22
         END ATTRIBUTE22,
    CASE WHEN P1.ATTRIBUTE78 = 'Recon - Previous Uncontracted' AND P1.ATTRIBUTE45 = 'Pre to Post'
         THEN TO_CHAR(P1.LT_PPM_UPSELL_VALUE)
         ELSE P1.ATTRIBUTE23
         END ATTRIBUTE23,
    P1.ATTRIBUTE24,P1.ATTRIBUTE25,P1.ATTRIBUTE26,P1.ATTRIBUTE27,P1.ATTRIBUTE28,P1.ATTRIBUTE29,P1.ATTRIBUTE30,
    P1.ATTRIBUTE31,P1.ATTRIBUTE32,P1.ATTRIBUTE33,P1.ATTRIBUTE34,P1.ATTRIBUTE35,P1.ATTRIBUTE36,P1.ATTRIBUTE37,P1.ATTRIBUTE38,P1.ATTRIBUTE39,P1.ATTRIBUTE40,P1.ATTRIBUTE41,P1.ATTRIBUTE42,P1.ATTRIBUTE43,P1.ATTRIBUTE44,P1.ATTRIBUTE45,P1.ATTRIBUTE46,P1.ATTRIBUTE47,P1.ATTRIBUTE48,P1.ATTRIBUTE49,
    P1.ATTRIBUTE50,P1.ATTRIBUTE51,P1.ATTRIBUTE52,P1.ATTRIBUTE53,P1.ATTRIBUTE54,P1.ATTRIBUTE55,P1.ATTRIBUTE56,P1.ATTRIBUTE57,P1.ATTRIBUTE58,P1.ATTRIBUTE59,P1.ATTRIBUTE60,P1.ATTRIBUTE61,P1.ATTRIBUTE62,P1.ATTRIBUTE63,P1.ATTRIBUTE64,P1.ATTRIBUTE65,P1.ATTRIBUTE66,P1.ATTRIBUTE67,P1.ATTRIBUTE68,
    P1.ATTRIBUTE69,P1.ATTRIBUTE70,P1.ATTRIBUTE71,P1.ATTRIBUTE72,P1.ATTRIBUTE73,P1.ATTRIBUTE74,P1.ATTRIBUTE75,P1.ATTRIBUTE76,P1.ATTRIBUTE77,
    CASE WHEN P1.ATTRIBUTE45 = 'Pre to Post' AND EXISTS(SELECT 1 FROM LT_PPM_PRODUCT_ELIGIBILITY LT WHERE LT.STRINGVALUE = 'Yes' AND LT.IDX_NAME_0 = P1.ATTRIBUTE81 AND LT.IDX_NAME_2 = 'NLIP' AND LT.STARTDATE <= TO_DATE(NVL(P1.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND LT.ENDDATE > TO_DATE(NVL(P1.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss'))
         THEN 'Prepaid to NLIP'
         WHEN P1.ATTRIBUTE78 = 'Recontract' AND P1.MCAO_REDEEMED = 'DLC Redeemed'
         THEN 'DLC Recontract' 
         ELSE TO_CHAR(NVL(P1.ATTRIBUTE78,'Non-Classified'))
         END ATTRIBUTE78,
    CASE WHEN (P1.ATTRIBUTE62 IS NULL OR P1.ATTRIBUTE72 IS NULL) 
              OR (TRUNC(TO_DATE(P1.ATTRIBUTE69,'dd/mm/yyyy hh24:mi:ss')) + ((P1.ATTRIBUTE72/12)*365) - TRUNC(TO_DATE(P1.ATTRIBUTE62,'dd/mm/yyyy hh24:mi:ss'))) <= LT1.VALUE
         THEN 'No'
         ELSE 'Yes'
         END ATTRIBUTE79, /*Override determined in Pass3*/
    P1.ATTRIBUTE80,P1.ATTRIBUTE81,P1.ATTRIBUTE82,P1.ATTRIBUTE83,P1.ATTRIBUTE84,P1.ATTRIBUTE85,P1.ATTRIBUTE86,P1.ATTRIBUTE87,
    P1.ATTRIBUTE88,P1.ATTRIBUTE89,P1.ATTRIBUTE90,P1.ATTRIBUTE91,P1.ATTRIBUTE92,P1.ATTRIBUTE93,
    CASE WHEN P1.A94_M*30.4 < P1.A94_D
         THEN ROUND(P1.A94_M + 1)
         ELSE ROUND(P1.A94_M)
         END ATTRIBUTE94, /*Override determined in Pass3*/
    P1.ATTRIBUTE95,P1.ATTRIBUTE96,P1.ATTRIBUTE97,P1.ATTRIBUTE98,P1.ATTRIBUTE99,P1.ATTRIBUTE100,P1.LAST_UPDATE_DATE,P1.CREATION_DATE,P1.BOOKED_DATE,P1.REVENUE_TYPE,P1.TYPE,
    P1.EMPLOYEE_NUMBER,P1.RECORD_STATUS,P1.ERROR_TYPE,P1.ERROR_MSG,P1.SOURCE,P1.SUBMITTED_DATE,P1.STATUS_HEADER,P1.STATUS_ORDER_LINE_ITEM,P1.ORIGINAL_ORDER_NUMBER,
    P1.EFFECTIVE_DATE, P1.MO_PROMOTION_INTEGRATION_ID, P1.MCAO_REDEEMED
FROM PASS1 P1
  LEFT JOIN PRODUCT                   PRD ON PRD.NAME = P1.ATTRIBUTE39
  LEFT JOIN LT_ALLOWABLE_RECON_PERIOD LT1 ON LT1.IDX_NAME_0 = PRD.GENERICATTRIBUTE1 AND LT1.IDX_NAME_1 = P1.ATTRIBUTE65 AND LT1.IDX_NAME_1 = P1.ATTRIBUTE65 AND LT1.STARTDATE <= TO_DATE(NVL(P1.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND LT1.ENDDATE > TO_DATE(NVL(P1.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss')
)
, PASS3 AS(
SELECT
    P2.FILENAME,P2.BATCHPROCESSDATE,P2.RECORDNUMBER,P2.PROCESSED_DATE,P2.PROCESSED_PERIOD_ID,P2.TRANSACTION_AMOUNT,P2.QUANTITY,P2.ATTRIBUTE1,P2.ATTRIBUTE2,P2.ATTRIBUTE3,P2.ATTRIBUTE4,P2.ATTRIBUTE5,P2.ATTRIBUTE6,P2.ATTRIBUTE7,P2.ATTRIBUTE8,P2.ATTRIBUTE9,P2.ATTRIBUTE10,P2.ATTRIBUTE11,
    P2.ATTRIBUTE12,P2.ATTRIBUTE13,P2.ATTRIBUTE14,P2.ATTRIBUTE15,P2.ATTRIBUTE16,P2.ATTRIBUTE17,P2.ATTRIBUTE18,P2.ATTRIBUTE19,P2.ATTRIBUTE20,P2.ATTRIBUTE21,P2.ATTRIBUTE22,P2.ATTRIBUTE23,P2.ATTRIBUTE24,P2.ATTRIBUTE25,P2.ATTRIBUTE26,P2.ATTRIBUTE27,P2.ATTRIBUTE28,P2.ATTRIBUTE29,P2.ATTRIBUTE30,
    P2.ATTRIBUTE31,P2.ATTRIBUTE32,P2.ATTRIBUTE33,P2.ATTRIBUTE34,P2.ATTRIBUTE35,P2.ATTRIBUTE36,P2.ATTRIBUTE37,P2.ATTRIBUTE38,P2.ATTRIBUTE39,P2.ATTRIBUTE40,P2.ATTRIBUTE41,P2.ATTRIBUTE42,P2.ATTRIBUTE43,P2.ATTRIBUTE44,P2.ATTRIBUTE45,P2.ATTRIBUTE46,P2.ATTRIBUTE47,P2.ATTRIBUTE48,P2.ATTRIBUTE49,
    P2.ATTRIBUTE50,P2.ATTRIBUTE51,P2.ATTRIBUTE52,
    CASE WHEN P2.MO_PROMOTION_INTEGRATION_ID IS NOT NULL AND P2.ATTRIBUTE39 = 'FOXTEL'
         THEN 'FFT'
         ELSE CASE WHEN P2.ATTRIBUTE22 IS NOT NULL AND P2.ATTRIBUTE22 <> 'Migration'
                   THEN 'Previous Part Number = ' || P2.ATTRIBUTE22 || ' and Previous Minimum Spend = ' || P2.ATTRIBUTE23 || ' '
                   END
              ||
              CASE WHEN P2.ATTRIBUTE78 = 'DLC Recontract'
                   THEN 'Recontract Month = ' || CASE WHEN P2.ATTRIBUTE94 > 24 THEN TO_CHAR(24) ELSE TO_CHAR(P2.ATTRIBUTE94) END
                   END
         END ATTRIBUTE53, /*Override determined in Pass4*/
    P2.ATTRIBUTE54,P2.ATTRIBUTE55,P2.ATTRIBUTE56,P2.ATTRIBUTE57,P2.ATTRIBUTE58,P2.ATTRIBUTE59,P2.ATTRIBUTE60,P2.ATTRIBUTE61,P2.ATTRIBUTE62,P2.ATTRIBUTE63,P2.ATTRIBUTE64,P2.ATTRIBUTE65,P2.ATTRIBUTE66,P2.ATTRIBUTE67,P2.ATTRIBUTE68,
    P2.ATTRIBUTE69,P2.ATTRIBUTE70,P2.ATTRIBUTE71,P2.ATTRIBUTE72,P2.ATTRIBUTE73,P2.ATTRIBUTE74,P2.ATTRIBUTE75,P2.ATTRIBUTE76,P2.ATTRIBUTE77,
    CASE WHEN P2.ATTRIBUTE78 = 'Recontract' AND P2.MCAO_REDEEMED = 'DPC Redeemed'
              AND TRUNC(TO_DATE(P2.ATTRIBUTE62,'dd/mm/yyyy hh24:mi:ss')) >= (TRUNC(TO_DATE(P2.ATTRIBUTE69,'dd/mm/yyyy hh24:mi:ss')) + 365)
              AND P2.ATTRIBUTE79 = 'Yes'
         THEN 'NPF Recontract'
         WHEN P2.ATTRIBUTE78 = 'Recontract' AND P2.MCAO_REDEEMED = 'DPC Redeemed'
              AND TRUNC(TO_DATE(P2.ATTRIBUTE62,'dd/mm/yyyy hh24:mi:ss')) <= (TRUNC(TO_DATE(P2.ATTRIBUTE69,'dd/mm/yyyy hh24:mi:ss')) + ((P2.ATTRIBUTE72/12)*365))
              AND P2.ATTRIBUTE79 = 'No'
         THEN 'NPF ARP Recontract'
         ELSE P2.ATTRIBUTE78
         END ATTRIBUTE78,
    CASE WHEN P2.ATTRIBUTE78 = 'DLC Recontract'
         THEN CASE WHEN TO_NUMBER(P2.ATTRIBUTE94) < 13
                   THEN 'Yes'
                   ELSE NULL
                   END
         ELSE P2.ATTRIBUTE79
         END ATTRIBUTE79,
    P2.ATTRIBUTE80,P2.ATTRIBUTE81,P2.ATTRIBUTE82,P2.ATTRIBUTE83,P2.ATTRIBUTE84,P2.ATTRIBUTE85,P2.ATTRIBUTE86,P2.ATTRIBUTE87,
    P2.ATTRIBUTE88,P2.ATTRIBUTE89,P2.ATTRIBUTE90,P2.ATTRIBUTE91,P2.ATTRIBUTE92,P2.ATTRIBUTE93,
    CASE WHEN P2.ATTRIBUTE78 = 'DLC Recontract' 
         THEN CASE WHEN P2.ATTRIBUTE94 > 24 THEN TO_CHAR(24) ELSE TO_CHAR(P2.ATTRIBUTE94) END
         ELSE NULL
         END ATTRIBUTE94,
    P2.ATTRIBUTE95,P2.ATTRIBUTE96,P2.ATTRIBUTE97,P2.ATTRIBUTE98,P2.ATTRIBUTE99,P2.ATTRIBUTE100,P2.LAST_UPDATE_DATE,P2.CREATION_DATE,P2.BOOKED_DATE,P2.REVENUE_TYPE,P2.TYPE,
    P2.EMPLOYEE_NUMBER,P2.RECORD_STATUS,P2.ERROR_TYPE,P2.ERROR_MSG,P2.SOURCE,P2.SUBMITTED_DATE,P2.STATUS_HEADER,P2.STATUS_ORDER_LINE_ITEM,P2.ORIGINAL_ORDER_NUMBER
FROM PASS2 P2 )
SELECT
    P3.FILENAME,P3.BATCHPROCESSDATE,P3.RECORDNUMBER,P3.PROCESSED_DATE,P3.PROCESSED_PERIOD_ID,P3.TRANSACTION_AMOUNT,P3.QUANTITY,P3.ATTRIBUTE1,P3.ATTRIBUTE2,P3.ATTRIBUTE3,P3.ATTRIBUTE4,P3.ATTRIBUTE5,P3.ATTRIBUTE6,P3.ATTRIBUTE7,P3.ATTRIBUTE8,P3.ATTRIBUTE9,P3.ATTRIBUTE10,P3.ATTRIBUTE11,
    P3.ATTRIBUTE12,P3.ATTRIBUTE13,P3.ATTRIBUTE14,P3.ATTRIBUTE15,P3.ATTRIBUTE16,P3.ATTRIBUTE17,P3.ATTRIBUTE18,P3.ATTRIBUTE19,P3.ATTRIBUTE20,P3.ATTRIBUTE21,P3.ATTRIBUTE22,P3.ATTRIBUTE23,P3.ATTRIBUTE24,P3.ATTRIBUTE25,P3.ATTRIBUTE26,P3.ATTRIBUTE27,P3.ATTRIBUTE28,P3.ATTRIBUTE29,P3.ATTRIBUTE30,
    P3.ATTRIBUTE31,P3.ATTRIBUTE32,P3.ATTRIBUTE33,P3.ATTRIBUTE34,P3.ATTRIBUTE35,P3.ATTRIBUTE36,P3.ATTRIBUTE37,P3.ATTRIBUTE38,P3.ATTRIBUTE39,P3.ATTRIBUTE40,P3.ATTRIBUTE41,P3.ATTRIBUTE42,P3.ATTRIBUTE43,P3.ATTRIBUTE44,P3.ATTRIBUTE45,P3.ATTRIBUTE46,P3.ATTRIBUTE47,P3.ATTRIBUTE48,P3.ATTRIBUTE49,
    P3.ATTRIBUTE50,P3.ATTRIBUTE51,P3.ATTRIBUTE52,
--    CASE WHEN p3.ATTRIBUTE78 = 'Recon - Previous Uncontracted' 
--              AND EXISTS(SELECT 1 FROM LT_PPM_Casual lt WHERE lt.IDX_NAME_1 = p3.ATTRIBUTE81 AND lt.STARTDATE <= TO_DATE(NVL(p3.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND lt.ENDDATE > TO_DATE(NVL(p3.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss'))
--              AND EXISTS(SELECT 1 FROM CS_SALESTRANSACTION txn 
--                          JOIN CS_GASALESTRANSACTION etxn ON
--                            etxn.SALESTRANSACTIONSEQ = txn.SALESTRANSACTIONSEQ
--                            AND etxn.TENANTID = txn.TENANTID
--                            AND etxn.PAGENUMBER = 0
--                          JOIN CS_CREDIT cdt ON
--                            cdt.SALESTRANSACTIONSEQ = txn.SALESTRANSACTIONSEQ
--                            AND cdt.TENANTID = txn.TENANTID
--                        WHERE etxn.GENERICATTRIBUTE1 = p3.ATTRIBUTE26 --billing account
--                          AND txn.GENERICATTRIBUTE29 = p3.ATTRIBUTE43 --event source/service identifier
--                          AND ADD_MONTHS(cdt.COMPENSATIONDATE,9) <= TO_DATE(p3.EFFECTIVE_DATE,'dd/mm/yyyy hh24:mi:ss')
--                          AND txn.TENANTID = 'TELS')
--         THEN 'Early Recontract from NLIP'
--         ELSE p3.ATTRIBUTE53
--         END ATTRIBUTE53,
    P3.ATTRIBUTE53,
    P3.ATTRIBUTE54,P3.ATTRIBUTE55,P3.ATTRIBUTE56,P3.ATTRIBUTE57,P3.ATTRIBUTE58,P3.ATTRIBUTE59,P3.ATTRIBUTE60,P3.ATTRIBUTE61,P3.ATTRIBUTE62,P3.ATTRIBUTE63,P3.ATTRIBUTE64,P3.ATTRIBUTE65,P3.ATTRIBUTE66,P3.ATTRIBUTE67,P3.ATTRIBUTE68,
    P3.ATTRIBUTE69,P3.ATTRIBUTE70,P3.ATTRIBUTE71,P3.ATTRIBUTE72,P3.ATTRIBUTE73,P3.ATTRIBUTE74,P3.ATTRIBUTE75,P3.ATTRIBUTE76,P3.ATTRIBUTE77,P3.ATTRIBUTE78,
--    CASE WHEN p3.ATTRIBUTE78 = 'Recon - Previous Uncontracted' 
--              AND EXISTS(SELECT 1 FROM CS_SALESTRANSACTION txn 
--                          JOIN CS_GASALESTRANSACTION etxn ON
--                            etxn.SALESTRANSACTIONSEQ = txn.SALESTRANSACTIONSEQ
--                            AND etxn.TENANTID = txn.TENANTID
--                            AND etxn.PAGENUMBER = 0
--                          JOIN CS_CREDIT cdt ON
--                            cdt.SALESTRANSACTIONSEQ = txn.SALESTRANSACTIONSEQ
--                            AND cdt.TENANTID = txn.TENANTID
--                        WHERE etxn.GENERICATTRIBUTE1 = p3.ATTRIBUTE26 --billing account
--                          AND txn.GENERICATTRIBUTE29 = p3.ATTRIBUTE43 --event source/service identifier
--                          AND ADD_MONTHS(cdt.COMPENSATIONDATE,9) <= TO_DATE(p3.EFFECTIVE_DATE,'dd/mm/yyyy hh24:mi:ss')
--                          AND txn.TENANTID = 'TELS')
--              AND EXISTS(SELECT 1 FROM LT_PPM_Casual lt WHERE lt.IDX_NAME_1 = p3.ATTRIBUTE81 AND lt.STARTDATE <= TO_DATE(NVL(p3.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND lt.ENDDATE > TO_DATE(NVL(p3.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss'))
--         THEN 'Yes'
--         ELSE TO_CHAR(p3.ATTRIBUTE79)
--         END ATTRIBUTE79,
    CASE WHEN P3.ATTRIBUTE78 IN('NPF Recontract','NPF ARP Recontract')
         THEN 'No'
         ELSE P3.ATTRIBUTE79
         END ATTRIBUTE79,
    P3.ATTRIBUTE80,P3.ATTRIBUTE81,P3.ATTRIBUTE82,P3.ATTRIBUTE83,P3.ATTRIBUTE84,P3.ATTRIBUTE85,P3.ATTRIBUTE86,P3.ATTRIBUTE87,
    P3.ATTRIBUTE88,P3.ATTRIBUTE89,P3.ATTRIBUTE90,P3.ATTRIBUTE91,P3.ATTRIBUTE92,P3.ATTRIBUTE93,P3.ATTRIBUTE94,P3.ATTRIBUTE95,P3.ATTRIBUTE96,P3.ATTRIBUTE97,P3.ATTRIBUTE98,P3.ATTRIBUTE99,P3.ATTRIBUTE100,P3.LAST_UPDATE_DATE,P3.CREATION_DATE,P3.BOOKED_DATE,P3.REVENUE_TYPE,P3.TYPE,
    P3.EMPLOYEE_NUMBER,P3.RECORD_STATUS,P3.ERROR_TYPE,P3.ERROR_MSG,P3.SOURCE,P3.FILENAME,P3.RECORDNUMBER,P3.SUBMITTED_DATE,P3.STATUS_HEADER,P3.STATUS_ORDER_LINE_ITEM,P3.ORIGINAL_ORDER_NUMBER
FROM PASS3 P3