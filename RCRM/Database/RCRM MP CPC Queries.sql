--PPE Matrix
WITH ATTRIBUTES AS(
    SELECT d.FILENAME, d.RECORDNUMBER, d.ORDER_NUMBER, d.ROW_ID ATTRIBUTE_OWNER_ROW_ID, d.ATTRIBUTE_ROW_ID, d.ATTRIBUTE_ACTION_CODE, d.ATTRIBUTE_DISPLAY_NAME, d.ATTRIBUTE_VALUE
    FROM TELS_STAGE_RCRM d
    WHERE d.ATTRIBUTE_ROW_ID IS NOT NULL)
, MP_OLI AS(
    SELECT * FROM TELS_SUBMITTED_ORDERS_VIEW WHERE REC_TYPE = 'MP_OLI')
, MP_ASSOC_MOLI AS(
    SELECT * FROM TELS_SUBMITTED_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_MOLI')
, MP_ASSOC_SIM_OLI AS(
    SELECT * FROM TELS_SUBMITTED_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_SIM_OLI')
, MP_ASSOC_HW_OLI AS(
    SELECT * FROM TELS_SUBMITTED_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_HW_OLI')
, MP_ASSOC_FHW_OLI AS(
    SELECT * FROM TELS_SUBMITTED_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_FHW_OLI')
, MP_ASSOC_MAIN_CONT_ADD_OLI AS(
    SELECT * FROM TELS_SUBMITTED_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_MAIN_CONT_ADD_OLI')
, MP_ASSOC_MAIN_CONT_DEL_OLI AS(
    SELECT * FROM TELS_SUBMITTED_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_MAIN_CONT_DEL_OLI')
, MP_ASSOC_MAIN_PLAN_DEL_OLI AS( 
    SELECT * FROM TELS_SUBMITTED_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_MAIN_PLAN_DEL_OLI')
, MP_ASSOC_CONTRACT_ADD_OLI AS(
    SELECT * FROM TELS_SUBMITTED_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_CONTRACT_ADD_OLI')
, MP_ASSOC_CONTRACT_DEL_OLI AS(
    SELECT * FROM TELS_SUBMITTED_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_CONTRACT_DEL_OLI')
, MP_ASSOC_CONVERT_PLAN_OLI AS( 
    SELECT * FROM TELS_SUBMITTED_ORDERS_VIEW WHERE REC_TYPE = 'MP_ASSOC_CONVERT_PLAN_OLI')
, LT_Sales_Type_Main_Plan AS(
    SELECT lt.STARTDATE, lt.ENDDATE, lt.DIM_NAME_0, lt.IDX_NAME_0, lt.DIM_NAME_1, lt.IDX_NAME_1, lt.DIM_NAME_2, lt.IDX_NAME_2, lt.DIM_NAME_3, lt.IDX_NAME_3, lt.DIM_NAME_4, lt.IDX_NAME_4, lt.DIM_NAME_5, lt.IDX_NAME_5, lt.DIM_NAME_6, lt.IDX_NAME_6, lt.DIM_NAME_7, lt.IDX_NAME_7, lt.DIM_NAME_8, lt.IDX_NAME_8, lt.STRINGVALUE
    FROM TELS_RCRM_MV_MDLT lt
    WHERE NAME = 'LT_Sales_Type_Main_Plan')
, LT_PPM_Upsell AS(
    SELECT lt.STARTDATE, lt.ENDDATE, lt.DIM_NAME_0, lt.IDX_NAME_0, lt.VALUE
    FROM TELS_RCRM_MV_MDLT lt
    WHERE NAME = 'LT_PPM_Upsell')
, LT_Plan_VAS_HW_RO AS(
    SELECT lt.STARTDATE, lt.ENDDATE, lt.DIM_NAME_0, lt.IDX_NAME_0, lt.DIM_NAME_1, lt.IDX_NAME_1, lt.STRINGVALUE
    FROM TELS_RCRM_MV_MDLT lt
    WHERE NAME = 'LT_Plan_VAS_HW_RO')
, LT_PPM_Casual AS(
    SELECT lt.STARTDATE, lt.ENDDATE, lt.DIM_NAME_0, lt.IDX_NAME_0, lt.DIM_NAME_1, lt.IDX_NAME_1, lt.VALUE
    FROM TELS_RCRM_MV_MDLT lt
    WHERE NAME = 'LT_PPM_Casual')
, LT_Allowable_Recon_Period AS(
    SELECT lt.STARTDATE, lt.ENDDATE, lt.DIM_NAME_0, lt.IDX_NAME_0, lt.DIM_NAME_1, lt.IDX_NAME_1, lt.VALUE
    FROM TELS_RCRM_MV_MDLT lt
    WHERE NAME = 'LT_Allowable_Recon_Period')
, PRODUCT AS(
    SELECT cls.NAME, prd.GENERICATTRIBUTE1 
    FROM   
      cs_CategoryTree@tc_link ctr 
      JOIN cs_Category_Classifiers@tc_link ccl ON
        ccl.removedate = TO_DATE('01-01-2200','DD-MM-YYYY')
        and ccl.categoryTreeSeq = ctr.categoryTreeSeq
        and ccl.TENANTID = ctr.TENANTID
      JOIN cs_classifier@tc_link cls ON
        cls.removedate = TO_DATE('01-01-2200','DD-MM-YYYY')
        and cls.classifierseq = ccl.classifierseq
        and cls.TENANTID = ccl.TENANTID
      JOIN CS_PRODUCT@TC_LINK prd ON
        prd.removedate = TO_DATE('01-01-2200','DD-MM-YYYY')
        and prd.classifierseq = cls.classifierseq
        and prd.TENANTID = cls.TENANTID
    WHERE
        ctr.removedate = TO_DATE('01-01-2200','DD-MM-YYYY')
        and ctr.TENANTID = 'TELS'
        and ctr.NAME = 'Product_Category'
    GROUP BY cls.NAME, prd.GENERICATTRIBUTE1) -- !!! Needs to be fixed for effective dating
, PASS1 AS(
SELECT --Pass1. Get all the simple columns here
    mo.FILENAME,
    mo.BATCHPROCESSDATE,
    mo.RECORDNUMBER,
    mpam.PROVISIONED_DATE PROCESSED_DATE,
    NULL PROCESSED_PERIOD_ID,
    mo.LIST_PRICE TRANSACTION_AMOUNT,
    '1' QUANTITY,
    mpam.CUSTOMER_LAST_NAME ATTRIBUTE1,
    mpam.CUSTOMER_FIRST_NAME ATTRIBUTE2,
    NULL ATTRIBUTE3,NULL ATTRIBUTE4,NULL ATTRIBUTE5,NULL ATTRIBUTE6,NULL ATTRIBUTE7,NULL ATTRIBUTE8,NULL ATTRIBUTE9,NULL ATTRIBUTE10,NULL ATTRIBUTE11,NULL ATTRIBUTE12,NULL ATTRIBUTE13,NULL ATTRIBUTE14,NULL ATTRIBUTE15,NULL ATTRIBUTE16,NULL ATTRIBUTE17,NULL ATTRIBUTE18,NULL ATTRIBUTE19,NULL ATTRIBUTE20,
    CASE WHEN mo.ACTION_CODE = 'Add' AND mmcao.ACTION_CODE = 'Add'
         THEN a4.ATTRIBUTE_VALUE 
         END ATTRIBUTE21,
    CASE WHEN mo.ACTION_CODE = 'Add' AND mmcao.ACTION_CODE = 'Add' AND a5.ATTRIBUTE_VALUE IS NOT NULL 
         THEN a5.ATTRIBUTE_VALUE
         WHEN mo.ACTION_CODE = 'Add' AND mmcao.ACTION_CODE = 'Add'
         THEN mmpdo.PART_NUMBER
         END ATTRIBUTE22,
    CASE WHEN mo.ACTION_CODE = 'Add' AND mmcao.ACTION_CODE = 'Add' AND a6.ATTRIBUTE_VALUE IS NOT NULL 
         THEN a6.ATTRIBUTE_VALUE
         WHEN mo.ACTION_CODE = 'Add' AND mmcao.ACTION_CODE = 'Add' AND a7.ATTRIBUTE_VALUE IS NOT NULL 
         THEN a7.ATTRIBUTE_VALUE
         END ATTRIBUTE23,
    NULL ATTRIBUTE24,
    mpam.ORDER_NUMBER ATTRIBUTE25,
    mpam.BILLING_ACCOUNT ATTRIBUTE26,
    mpam.PARTNER_CODE ATTRIBUTE27,
    NULL ATTRIBUTE28,NULL ATTRIBUTE29,NULL ATTRIBUTE30,NULL ATTRIBUTE31,NULL ATTRIBUTE32,NULL ATTRIBUTE33,NULL ATTRIBUTE34,
    mpam.BUSINESS_UNIT ATTRIBUTE35,
    mpam.SALES_FORCE_ID ATTRIBUTE36,
    'COMMISSIONABLE TRANSACTION' ATTRIBUTE37,
    mpam.SOURCE_SYSTEM ATTRIBUTE38,
    mpam.PRODUCT ATTRIBUTE39,
    NULL ATTRIBUTE40,
    mpam.ACTION_CODE ATTRIBUTE41,
    mpam.TRANSFER_TYPE ATTRIBUTE42,
    mpam.EVENT_SOURCE ATTRIBUTE43,
    mpam.PROMOTION_PART_NUMBER ATTRIBUTE44,
    mpam.ORDER_SUB_TYPE ATTRIBUTE45,
    mo.ROW_ID ATTRIBUTE46,
    mo.PRODUCT ATTRIBUTE47,
    NULL ATTRIBUTE48,
    mo.ACTION_CODE ATTRIBUTE49,
    mo.PROMOTION_PART_NUMBER ATTRIBUTE50,
    NULL ATTRIBUTE51,NULL ATTRIBUTE52,NULL ATTRIBUTE53/*Determined in Pass2*/,  NULL ATTRIBUTE54,NULL ATTRIBUTE55,NULL ATTRIBUTE56,
    CASE WHEN a3.ATTRIBUTE_ACTION_CODE IS NOT NULL
         THEN a3.ATTRIBUTE_ACTION_CODE
         END ATTRIBUTE57,
    a3.ATTRIBUTE_VALUE ATTRIBUTE58,
    NULL ATTRIBUTE59,
    mpam.ORDER_TYPE ATTRIBUTE60,
    mmcao.ACTION_CODE ATTRIBUTE61,
    mmcao.CONTRACT_START_DATE ATTRIBUTE62,
    NULL ATTRIBUTE63,NULL ATTRIBUTE64,
    Replace(a2.ATTRIBUTE_VALUE,' Months') ATTRIBUTE65,
    NULL ATTRIBUTE66,
    CASE WHEN a8.ATTRIBUTE_VALUE IS NOT NULL AND lt3.STRINGVALUE = 'Yes' AND lt4.STRINGVALUE = 'Yes'
         THEN a8.ATTRIBUTE_VALUE
         ELSE mo.HARDWARE_SUPPLIED_FLAG
         END ATTRIBUTE67, 
    NULL ATTRIBUTE68,
    mmcdo.CONTRACT_START_DATE ATTRIBUTE69,
    NULL ATTRIBUTE70,NULL ATTRIBUTE71,
    CASE WHEN IS_NUMBER(a1.ATTRIBUTE_VALUE) = 1 THEN a1.ATTRIBUTE_VALUE ELSE '0' END ATTRIBUTE72,
    NULL ATTRIBUTE73,NULL ATTRIBUTE74,NULL ATTRIBUTE75,NULL ATTRIBUTE76,NULL ATTRIBUTE77,
    NVL(lt1.STRINGVALUE,'Non-Classified') ATTRIBUTE78, /*Override Determined in Pass2*/
    NULL ATTRIBUTE79/*Determined in Pass2*/,
    NULL ATTRIBUTE80,
    mo.PART_NUMBER ATTRIBUTE81,
    NULL ATTRIBUTE82,NULL ATTRIBUTE83,NULL ATTRIBUTE84,NULL ATTRIBUTE85,NULL ATTRIBUTE86,NULL ATTRIBUTE87,
    mo.COMMISSION_PRODUCT_TYPE ATTRIBUTE88,
    NULL ATTRIBUTE89,NULL ATTRIBUTE90,
    maho.PART_NUMBER ATTRIBUTE91,
    maho.PRODUCT ATTRIBUTE92,
    NULL ATTRIBUTE93, /* ATTRIBUTE94 Determined further on*/
    NULL ATTRIBUTE95,NULL ATTRIBUTE96,NULL ATTRIBUTE97,NULL ATTRIBUTE98,NULL ATTRIBUTE99,NULL ATTRIBUTE100,
    NULL LAST_UPDATE_DATE,NULL CREATION_DATE,
    mpam.CREATED_DATE BOOKED_DATE,
    'REVENUE' REVENUE_TYPE,
    NULL TYPE,NULL EMPLOYEE_NUMBER,NULL RECORD_STATUS,NULL ERROR_TYPE,
    CASE WHEN IS_NUMBER(a1.ATTRIBUTE_VALUE) = 0
         THEN 'MP_ASSOC_MAIN_CONT_DEL_OLI Contract Term is not a number: ' || a1.ATTRIBUTE_VALUE || ' '
         END ERROR_MSG,
    mo.SOURCE_SYSTEM SOURCE,
    mpam.SUBMITTED_DATE SUBMITTED_DATE,
    mpam.STATUS_HEADER STATUS_HEADER,
    mpam.STATUS_ORDER_LINE_ITEM STATUS_ORDER_LINE_ITEM,
    mo.PROMOTION_INTEGRATION_ID MO_PROMOTION_INTEGRATION_ID,
    mo.EFFECTIVE_DATE EFFECTIVE_DATE,
    mmcao.ROW_ID MCAO_ROW_ID,
    mo.PART_NUMBER,
    CASE WHEN mpam.PRODUCT <> 'Mobile Service' AND mpam.ORDER_TYPE <> 'Add New Service'
         THEN NULL
         ELSE mpam.REASON_CODE
         END REASON_CODE,
    a10.ATTRIBUTE_VALUE MCAO_REDEEMED,
    round(MONTHS_BETWEEN(TRUNC(TO_DATE(mmcao.CONTRACT_START_DATE,'dd/mm/yyyy hh24:mi:ss')),TRUNC(TO_DATE(mmcdo.CONTRACT_START_DATE,'dd/mm/yyyy hh24:mi:ss')))) a94_m,
    round(TRUNC(TO_DATE(mmcao.CONTRACT_START_DATE,'dd/mm/yyyy hh24:mi:ss')) - TRUNC(TO_DATE(mmcdo.CONTRACT_START_DATE,'dd/mm/yyyy hh24:mi:ss'))) a94_d,
    lt2.VALUE LT_PPM_Upsell_VALUE
FROM 
  MP_OLI mo
  LEFT OUTER JOIN MP_ASSOC_MOLI               mpam ON mpam.ORDER_NUMBER = mo.ORDER_NUMBER AND mpam.STATUS_HEADER = mo.STATUS_HEADER AND mpam.ROW_ID = mo.ROOT_ITEM_ROW_ID AND mpam.FILENAME = mo.FILENAME
  LEFT OUTER JOIN MP_ASSOC_SIM_OLI            maso ON maso.ORDER_NUMBER = mo.ORDER_NUMBER AND maso.STATUS_HEADER = mo.STATUS_HEADER AND maso.ROOT_ITEM_ROW_ID = mo.ROOT_ITEM_ROW_ID AND maso.FILENAME = mo.FILENAME
  LEFT OUTER JOIN MP_ASSOC_FHW_OLI            mafo ON mafo.ORDER_NUMBER = mo.ORDER_NUMBER AND mafo.STATUS_HEADER = mo.STATUS_HEADER AND mafo.ROOT_ITEM_ROW_ID = mo.ROOT_ITEM_ROW_ID AND mafo.FILENAME = mo.FILENAME
  LEFT OUTER JOIN MP_ASSOC_HW_OLI             maho ON maho.ORDER_NUMBER = mo.ORDER_NUMBER AND maho.STATUS_HEADER = mo.STATUS_HEADER AND maho.ROOT_ITEM_ROW_ID = mo.ROOT_ITEM_ROW_ID AND maho.FILENAME = mo.FILENAME AND maho.PRODUCT <> 'ARO Accessory'
  LEFT OUTER JOIN MP_ASSOC_CONTRACT_ADD_OLI   mcao ON mcao.ORDER_NUMBER = mo.ORDER_NUMBER AND mcao.STATUS_HEADER = mo.STATUS_HEADER AND mcao.ROOT_ITEM_ROW_ID = mo.ROOT_ITEM_ROW_ID AND mcao.FILENAME = mo.FILENAME AND mcao.PRODUCT IN('Device Lease Contract','Device Payment Contract')
  LEFT OUTER JOIN MP_ASSOC_MAIN_CONT_ADD_OLI mmcao ON mmcao.ORDER_NUMBER = mo.ORDER_NUMBER AND mmcao.STATUS_HEADER = mo.STATUS_HEADER AND mmcao.ROOT_ITEM_ROW_ID = mo.ROOT_ITEM_ROW_ID AND mmcao.FILENAME = mo.FILENAME
  LEFT OUTER JOIN MP_ASSOC_MAIN_CONT_DEL_OLI mmcdo ON mmcdo.ORDER_NUMBER = mo.ORDER_NUMBER AND mmcdo.STATUS_HEADER = mo.STATUS_HEADER AND mmcdo.ROOT_ITEM_ROW_ID = mo.ROOT_ITEM_ROW_ID AND mmcdo.FILENAME = mo.FILENAME
  LEFT OUTER JOIN MP_ASSOC_MAIN_PLAN_DEL_OLI mmpdo ON mmpdo.ORDER_NUMBER = mo.ORDER_NUMBER AND mmpdo.STATUS_HEADER = mo.STATUS_HEADER AND mmpdo.ROOT_ITEM_ROW_ID = mo.ROOT_ITEM_ROW_ID AND mmpdo.FILENAME = mo.FILENAME
  LEFT OUTER JOIN ATTRIBUTES                    a1 ON a1.ATTRIBUTE_OWNER_ROW_ID = mmcdo.ROW_ID AND a1.ORDER_NUMBER = mmcdo.ORDER_NUMBER AND a1.FILENAME = mmcdo.FILENAME AND a1.ATTRIBUTE_DISPLAY_NAME = 'Contract Term'
  LEFT OUTER JOIN ATTRIBUTES                    a2 ON a2.ATTRIBUTE_OWNER_ROW_ID = mmcao.ROW_ID AND a2.ORDER_NUMBER = mmcao.ORDER_NUMBER AND a2.FILENAME = mmcao.FILENAME AND a2.ATTRIBUTE_DISPLAY_NAME = 'Contract Term'
  LEFT OUTER JOIN ATTRIBUTES                    a3 ON a3.ATTRIBUTE_OWNER_ROW_ID = maso.ROW_ID AND a3.ORDER_NUMBER = maso.ORDER_NUMBER AND a3.FILENAME = maso.FILENAME AND a3.ATTRIBUTE_DISPLAY_NAME = 'Network Type'
  LEFT OUTER JOIN ATTRIBUTES                    a4 ON a4.ATTRIBUTE_OWNER_ROW_ID = mmcao.ROW_ID AND a4.ORDER_NUMBER = mmcao.ORDER_NUMBER AND a4.FILENAME = mmcao.FILENAME AND a4.ATTRIBUTE_DISPLAY_NAME = 'Minimum Spend'
  LEFT OUTER JOIN ATTRIBUTES                    a5 ON a5.ATTRIBUTE_OWNER_ROW_ID = mmcdo.ROW_ID AND a5.ORDER_NUMBER = mmcdo.ORDER_NUMBER AND a5.FILENAME = mmcdo.FILENAME AND a5.ATTRIBUTE_DISPLAY_NAME = 'Plan ID'
  LEFT OUTER JOIN ATTRIBUTES                    a6 ON a6.ATTRIBUTE_OWNER_ROW_ID = mmcdo.ROW_ID AND a6.ORDER_NUMBER = mmcdo.ORDER_NUMBER AND a6.FILENAME = mmcdo.FILENAME AND a6.ATTRIBUTE_DISPLAY_NAME = 'Minimum Spend'
  LEFT OUTER JOIN ATTRIBUTES                    a7 ON a7.ATTRIBUTE_OWNER_ROW_ID = mmpdo.ROW_ID AND a7.ORDER_NUMBER = mmpdo.ORDER_NUMBER AND a7.FILENAME = mmpdo.FILENAME AND a7.ATTRIBUTE_DISPLAY_NAME = 'Minimum Spend'
  LEFT OUTER JOIN ATTRIBUTES                    a8 ON a8.ATTRIBUTE_OWNER_ROW_ID = mafo.ROW_ID AND a8.ORDER_NUMBER = mafo.ORDER_NUMBER AND a8.FILENAME = mafo.FILENAME AND a8.ATTRIBUTE_DISPLAY_NAME = 'Supplied in Store?'
  LEFT OUTER JOIN ATTRIBUTES                    a9 ON a9.ATTRIBUTE_OWNER_ROW_ID = mcao.ROW_ID AND a9.ORDER_NUMBER = mcao.ORDER_NUMBER AND a9.FILENAME = mcao.FILENAME AND a9.ATTRIBUTE_DISPLAY_NAME = 'Plan ID' AND a9.ATTRIBUTE_VALUE = mo.PART_NUMBER
  LEFT OUTER JOIN ATTRIBUTES                   a10 ON a10.ATTRIBUTE_OWNER_ROW_ID = a9.ATTRIBUTE_OWNER_ROW_ID AND a10.ORDER_NUMBER = a9.ORDER_NUMBER AND a10.FILENAME = a9.FILENAME AND a10.ATTRIBUTE_DISPLAY_NAME = 'Redeemed' AND a10.ATTRIBUTE_VALUE IN('Yes','DLC Redeemed','DPC Redeemed')
  LEFT OUTER JOIN LT_Sales_Type_Main_Plan      lt1 ON    lt1.IDX_NAME_0 = NVL(mpam.ORDER_TYPE,'NULL')    AND lt1.IDX_NAME_1 = NVL(mpam.ORDER_SUB_TYPE,'NULL') 
                                                     AND lt1.IDX_NAME_2 = NVL(mpam.TRANSFER_TYPE,'NULL') AND lt1.IDX_NAME_3 = NVL(mpam.ACTION_CODE,'NULL') 
                                                     AND lt1.IDX_NAME_4 = NVL(mo.ACTION_CODE,'NULL')     AND lt1.IDX_NAME_5 = NVL(mmcao.ACTION_CODE,'NULL') 
                                                     AND lt1.IDX_NAME_6 = NVL(mmcdo.ACTION_CODE,'NULL')  AND lt1.IDX_NAME_7 = NVL(mo.COMMISSION_PRODUCT_TYPE,'NULL')
                                                     AND lt1.IDX_NAME_8 = NVL(CASE WHEN mpam.PRODUCT = 'Mobile Service' AND mpam.REASON_CODE = 'Migration to Siebel' and mpam.ORDER_TYPE = 'Add New Service' THEN mpam.REASON_CODE ELSE NULL END,'NULL')
                                                     AND lt1.STARTDATE <= TO_DATE(NVL(mpam.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND lt1.ENDDATE > TO_DATE(NVL(mpam.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss')
  LEFT OUTER JOIN LT_PPM_Upsell                lt2 ON lt2.IDX_NAME_0 = lt1.STRINGVALUE AND lt2.STARTDATE <= TO_DATE(NVL(mo.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND lt2.ENDDATE > TO_DATE(NVL(mo.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss')
  LEFT OUTER JOIN LT_Plan_VAS_HW_RO            lt3 ON lt3.IDX_NAME_0 = mafo.PART_NUMBER AND lt3.IDX_NAME_1 = 'PLAN HW' AND lt3.STRINGVALUE = 'Yes' AND lt3.STARTDATE <= TO_DATE(NVL(mafo.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND lt3.ENDDATE > TO_DATE(NVL(mafo.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss')
  LEFT OUTER JOIN LT_Plan_VAS_HW_RO            lt4 ON lt4.IDX_NAME_0 = mo.PART_NUMBER AND lt4.IDX_NAME_1 = 'PLAN' AND lt4.STRINGVALUE = 'Yes' AND lt4.STARTDATE <= TO_DATE(NVL(mafo.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND lt4.ENDDATE > TO_DATE(NVL(mafo.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss')
WHERE NVL(mo.ORDER_SUB_TYPE,'NULL') <> 'Transfer' 
  AND (mo.NGB_PROD_TYPE = 'CPC' or (mo.NGB_PROD_TYPE = 'Shared' AND mpam.COMMISSION_PRODUCT_TYPE IS NULL))
  AND NOT EXISTS (SELECT 1 FROM MP_ASSOC_CONVERT_PLAN_OLI macpo WHERE macpo.ORDER_NUMBER = mo.ORDER_NUMBER AND macpo.STATUS_HEADER = mo.STATUS_HEADER AND macpo.ROW_ID = mo.ROOT_ITEM_ROW_ID)
--  and mo.row_id = '1-NUG3CVLV'
--  and mo.order_number = '1-1866710865747'
) 
, PASS2 AS(
SELECT
    p1.FILENAME,p1.BATCHPROCESSDATE,p1.RECORDNUMBER,p1.PROCESSED_DATE,p1.PROCESSED_PERIOD_ID,p1.TRANSACTION_AMOUNT,p1.QUANTITY,p1.ATTRIBUTE1,p1.ATTRIBUTE2,p1.ATTRIBUTE3,p1.ATTRIBUTE4,p1.ATTRIBUTE5,p1.ATTRIBUTE6,p1.ATTRIBUTE7,p1.ATTRIBUTE8,p1.ATTRIBUTE9,p1.ATTRIBUTE10,p1.ATTRIBUTE11,
    p1.ATTRIBUTE12,p1.ATTRIBUTE13,p1.ATTRIBUTE14,p1.ATTRIBUTE15,p1.ATTRIBUTE16,p1.ATTRIBUTE17,p1.ATTRIBUTE18,p1.ATTRIBUTE19,p1.ATTRIBUTE20,p1.ATTRIBUTE21,
    CASE WHEN p1.ATTRIBUTE78 = 'Recontract Migration'
         THEN 'Migration'
         WHEN p1.ATTRIBUTE78 = 'Recon - Previous Uncontracted' AND p1.ATTRIBUTE45 = 'Pre to Post'
         THEN 'Pre Paid'
         ELSE p1.ATTRIBUTE22
         END ATTRIBUTE22,
    CASE WHEN p1.ATTRIBUTE78 = 'Recon - Previous Uncontracted' AND p1.ATTRIBUTE45 = 'Pre to Post'
         THEN TO_CHAR(p1.LT_PPM_Upsell_VALUE)
         ELSE p1.ATTRIBUTE23
         END ATTRIBUTE23,
    p1.ATTRIBUTE24,p1.ATTRIBUTE25,p1.ATTRIBUTE26,p1.ATTRIBUTE27,p1.ATTRIBUTE28,p1.ATTRIBUTE29,p1.ATTRIBUTE30,
    p1.ATTRIBUTE31,p1.ATTRIBUTE32,p1.ATTRIBUTE33,p1.ATTRIBUTE34,p1.ATTRIBUTE35,p1.ATTRIBUTE36,p1.ATTRIBUTE37,p1.ATTRIBUTE38,p1.ATTRIBUTE39,p1.ATTRIBUTE40,p1.ATTRIBUTE41,p1.ATTRIBUTE42,p1.ATTRIBUTE43,p1.ATTRIBUTE44,p1.ATTRIBUTE45,p1.ATTRIBUTE46,p1.ATTRIBUTE47,p1.ATTRIBUTE48,p1.ATTRIBUTE49,
    p1.ATTRIBUTE50,p1.ATTRIBUTE51,p1.ATTRIBUTE52,p1.ATTRIBUTE53,p1.ATTRIBUTE54,p1.ATTRIBUTE55,p1.ATTRIBUTE56,p1.ATTRIBUTE57,p1.ATTRIBUTE58,p1.ATTRIBUTE59,p1.ATTRIBUTE60,p1.ATTRIBUTE61,p1.ATTRIBUTE62,p1.ATTRIBUTE63,p1.ATTRIBUTE64,p1.ATTRIBUTE65,p1.ATTRIBUTE66,p1.ATTRIBUTE67,p1.ATTRIBUTE68,
    p1.ATTRIBUTE69,p1.ATTRIBUTE70,p1.ATTRIBUTE71,p1.ATTRIBUTE72,p1.ATTRIBUTE73,p1.ATTRIBUTE74,p1.ATTRIBUTE75,p1.ATTRIBUTE76,p1.ATTRIBUTE77,
    CASE WHEN p1.ATTRIBUTE45 = 'Pre to Post' AND EXISTS(SELECT 1 FROM LT_PPM_Casual lt WHERE lt.IDX_NAME_1 = p1.ATTRIBUTE81 AND lt.STARTDATE <= TO_DATE(NVL(p1.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND lt.ENDDATE > TO_DATE(NVL(p1.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss'))
         THEN 'Prepaid to NLIP'
         WHEN p1.ATTRIBUTE78 = 'Recontract' AND p1.MCAO_REDEEMED = 'DLC Redeemed'
         THEN 'DLC Recontract' 
         ELSE TO_CHAR(NVL(p1.ATTRIBUTE78,'Non-Classified'))
         END ATTRIBUTE78,
    CASE WHEN (p1.ATTRIBUTE62 IS NULL OR p1.ATTRIBUTE72 IS NULL) 
              OR (trunc(TO_DATE(p1.ATTRIBUTE69,'dd/mm/yyyy hh24:mi:ss')) + ((p1.ATTRIBUTE72/12)*365) - trunc(TO_DATE(p1.ATTRIBUTE62,'dd/mm/yyyy hh24:mi:ss'))) <= lt1.VALUE
         THEN 'No'
         ELSE 'Yes'
         END ATTRIBUTE79, /*Override determined in Pass3*/
    p1.ATTRIBUTE80,p1.ATTRIBUTE81,p1.ATTRIBUTE82,p1.ATTRIBUTE83,p1.ATTRIBUTE84,p1.ATTRIBUTE85,p1.ATTRIBUTE86,p1.ATTRIBUTE87,
    p1.ATTRIBUTE88,p1.ATTRIBUTE89,p1.ATTRIBUTE90,p1.ATTRIBUTE91,p1.ATTRIBUTE92,p1.ATTRIBUTE93,
    CASE WHEN p1.a94_m*30.4 < p1.a94_d
         THEN round(p1.a94_m + 1)
         ELSE round(p1.a94_m)
         END ATTRIBUTE94, /*Override determined in Pass3*/
    p1.ATTRIBUTE95,p1.ATTRIBUTE96,p1.ATTRIBUTE97,p1.ATTRIBUTE98,p1.ATTRIBUTE99,p1.ATTRIBUTE100,p1.LAST_UPDATE_DATE,p1.CREATION_DATE,p1.BOOKED_DATE,p1.REVENUE_TYPE,p1.TYPE,
    p1.EMPLOYEE_NUMBER,p1.RECORD_STATUS,p1.ERROR_TYPE,p1.ERROR_MSG,p1.SOURCE,p1.SUBMITTED_DATE,p1.STATUS_HEADER,p1.STATUS_ORDER_LINE_ITEM,
    p1.EFFECTIVE_DATE, p1.MO_PROMOTION_INTEGRATION_ID, p1.MCAO_REDEEMED
FROM PASS1 p1
  LEFT OUTER JOIN PRODUCT                   prd ON prd.NAME = p1.ATTRIBUTE39
  LEFT OUTER JOIN LT_Allowable_Recon_Period lt1 ON lt1.IDX_NAME_0 = prd.GENERICATTRIBUTE1 AND lt1.IDX_NAME_1 = p1.ATTRIBUTE65 AND lt1.IDX_NAME_1 = p1.ATTRIBUTE65 AND lt1.STARTDATE <= TO_DATE(NVL(p1.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND lt1.ENDDATE > TO_DATE(NVL(p1.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss')
)
, PASS3 AS(
SELECT
    p2.FILENAME,p2.BATCHPROCESSDATE,p2.RECORDNUMBER,p2.PROCESSED_DATE,p2.PROCESSED_PERIOD_ID,p2.TRANSACTION_AMOUNT,p2.QUANTITY,p2.ATTRIBUTE1,p2.ATTRIBUTE2,p2.ATTRIBUTE3,p2.ATTRIBUTE4,p2.ATTRIBUTE5,p2.ATTRIBUTE6,p2.ATTRIBUTE7,p2.ATTRIBUTE8,p2.ATTRIBUTE9,p2.ATTRIBUTE10,p2.ATTRIBUTE11,
    p2.ATTRIBUTE12,p2.ATTRIBUTE13,p2.ATTRIBUTE14,p2.ATTRIBUTE15,p2.ATTRIBUTE16,p2.ATTRIBUTE17,p2.ATTRIBUTE18,p2.ATTRIBUTE19,p2.ATTRIBUTE20,p2.ATTRIBUTE21,p2.ATTRIBUTE22,p2.ATTRIBUTE23,p2.ATTRIBUTE24,p2.ATTRIBUTE25,p2.ATTRIBUTE26,p2.ATTRIBUTE27,p2.ATTRIBUTE28,p2.ATTRIBUTE29,p2.ATTRIBUTE30,
    p2.ATTRIBUTE31,p2.ATTRIBUTE32,p2.ATTRIBUTE33,p2.ATTRIBUTE34,p2.ATTRIBUTE35,p2.ATTRIBUTE36,p2.ATTRIBUTE37,p2.ATTRIBUTE38,p2.ATTRIBUTE39,p2.ATTRIBUTE40,p2.ATTRIBUTE41,p2.ATTRIBUTE42,p2.ATTRIBUTE43,p2.ATTRIBUTE44,p2.ATTRIBUTE45,p2.ATTRIBUTE46,p2.ATTRIBUTE47,p2.ATTRIBUTE48,p2.ATTRIBUTE49,
    p2.ATTRIBUTE50,p2.ATTRIBUTE51,p2.ATTRIBUTE52,
    CASE WHEN p2.MO_PROMOTION_INTEGRATION_ID IS NOT NULL AND p2.ATTRIBUTE39 = 'FOXTEL'
         THEN 'FFT'
         ELSE CASE WHEN p2.ATTRIBUTE22 IS NOT NULL AND p2.ATTRIBUTE22 <> 'Migration'
                   THEN 'Previous Part Number = ' || p2.ATTRIBUTE22 || ' and Previous Minimum Spend = ' || p2.ATTRIBUTE23 || ' '
                   END
              ||
              CASE WHEN p2.ATTRIBUTE78 = 'DLC Recontract'
                   THEN 'Recontract Month = ' || p2.ATTRIBUTE94
                   END
         END ATTRIBUTE53, /*Override determined in Pass4*/
    p2.ATTRIBUTE54,p2.ATTRIBUTE55,p2.ATTRIBUTE56,p2.ATTRIBUTE57,p2.ATTRIBUTE58,p2.ATTRIBUTE59,p2.ATTRIBUTE60,p2.ATTRIBUTE61,p2.ATTRIBUTE62,p2.ATTRIBUTE63,p2.ATTRIBUTE64,p2.ATTRIBUTE65,p2.ATTRIBUTE66,p2.ATTRIBUTE67,p2.ATTRIBUTE68,
    p2.ATTRIBUTE69,p2.ATTRIBUTE70,p2.ATTRIBUTE71,p2.ATTRIBUTE72,p2.ATTRIBUTE73,p2.ATTRIBUTE74,p2.ATTRIBUTE75,p2.ATTRIBUTE76,p2.ATTRIBUTE77,
    CASE WHEN p2.ATTRIBUTE78 = 'Recontract' AND p2.MCAO_REDEEMED = 'DPC Redeemed'
              AND trunc(TO_DATE(p2.ATTRIBUTE62,'dd/mm/yyyy hh24:mi:ss')) >= (trunc(TO_DATE(p2.ATTRIBUTE69,'dd/mm/yyyy hh24:mi:ss')) + 365)
              AND p2.ATTRIBUTE79 = 'Yes'
         THEN 'NPF Recontract'
         WHEN p2.ATTRIBUTE78 = 'Recontract' AND p2.MCAO_REDEEMED = 'DPC Redeemed'
              AND trunc(TO_DATE(p2.ATTRIBUTE62,'dd/mm/yyyy hh24:mi:ss')) <= (trunc(TO_DATE(p2.ATTRIBUTE69,'dd/mm/yyyy hh24:mi:ss')) + ((p2.ATTRIBUTE72/12)*365))
              AND p2.ATTRIBUTE79 = 'No'
         THEN 'NPF ARP Recontract'
         ELSE p2.ATTRIBUTE78
         END ATTRIBUTE78,
    CASE WHEN p2.ATTRIBUTE78 = 'DLC Recontract'
         THEN CASE WHEN TO_NUMBER(p2.ATTRIBUTE94) < 13
                   THEN 'Yes'
                   ELSE NULL
                   END
         ELSE p2.ATTRIBUTE79
         END ATTRIBUTE79,
    p2.ATTRIBUTE80,p2.ATTRIBUTE81,p2.ATTRIBUTE82,p2.ATTRIBUTE83,p2.ATTRIBUTE84,p2.ATTRIBUTE85,p2.ATTRIBUTE86,p2.ATTRIBUTE87,
    p2.ATTRIBUTE88,p2.ATTRIBUTE89,p2.ATTRIBUTE90,p2.ATTRIBUTE91,p2.ATTRIBUTE92,p2.ATTRIBUTE93,
    CASE WHEN p2.ATTRIBUTE78 = 'DLC Recontract' 
         THEN CASE WHEN p2.ATTRIBUTE94 > 24 THEN TO_CHAR(24) ELSE TO_CHAR(p2.ATTRIBUTE94) END
         ELSE NULL
         END ATTRIBUTE94,
    p2.ATTRIBUTE95,p2.ATTRIBUTE96,p2.ATTRIBUTE97,p2.ATTRIBUTE98,p2.ATTRIBUTE99,p2.ATTRIBUTE100,p2.LAST_UPDATE_DATE,p2.CREATION_DATE,p2.BOOKED_DATE,p2.REVENUE_TYPE,p2.TYPE,
    p2.EMPLOYEE_NUMBER,p2.RECORD_STATUS,p2.ERROR_TYPE,p2.ERROR_MSG,p2.SOURCE,p2.SUBMITTED_DATE,p2.STATUS_HEADER,p2.STATUS_ORDER_LINE_ITEM
FROM PASS2 p2 )
SELECT
    p3.FILENAME,p3.BATCHPROCESSDATE,p3.RECORDNUMBER,p3.PROCESSED_DATE,p3.PROCESSED_PERIOD_ID,p3.TRANSACTION_AMOUNT,p3.QUANTITY,p3.ATTRIBUTE1,p3.ATTRIBUTE2,p3.ATTRIBUTE3,p3.ATTRIBUTE4,p3.ATTRIBUTE5,p3.ATTRIBUTE6,p3.ATTRIBUTE7,p3.ATTRIBUTE8,p3.ATTRIBUTE9,p3.ATTRIBUTE10,p3.ATTRIBUTE11,
    p3.ATTRIBUTE12,p3.ATTRIBUTE13,p3.ATTRIBUTE14,p3.ATTRIBUTE15,p3.ATTRIBUTE16,p3.ATTRIBUTE17,p3.ATTRIBUTE18,p3.ATTRIBUTE19,p3.ATTRIBUTE20,p3.ATTRIBUTE21,p3.ATTRIBUTE22,p3.ATTRIBUTE23,p3.ATTRIBUTE24,p3.ATTRIBUTE25,p3.ATTRIBUTE26,p3.ATTRIBUTE27,p3.ATTRIBUTE28,p3.ATTRIBUTE29,p3.ATTRIBUTE30,
    p3.ATTRIBUTE31,p3.ATTRIBUTE32,p3.ATTRIBUTE33,p3.ATTRIBUTE34,p3.ATTRIBUTE35,p3.ATTRIBUTE36,p3.ATTRIBUTE37,p3.ATTRIBUTE38,p3.ATTRIBUTE39,p3.ATTRIBUTE40,p3.ATTRIBUTE41,p3.ATTRIBUTE42,p3.ATTRIBUTE43,p3.ATTRIBUTE44,p3.ATTRIBUTE45,p3.ATTRIBUTE46,p3.ATTRIBUTE47,p3.ATTRIBUTE48,p3.ATTRIBUTE49,
    p3.ATTRIBUTE50,p3.ATTRIBUTE51,p3.ATTRIBUTE52,
--    CASE WHEN p3.ATTRIBUTE78 = 'Recon - Previous Uncontracted' 
--              AND EXISTS(SELECT 1 FROM LT_PPM_Casual lt WHERE lt.IDX_NAME_1 = p3.ATTRIBUTE81 AND lt.STARTDATE <= TO_DATE(NVL(p3.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND lt.ENDDATE > TO_DATE(NVL(p3.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss'))
--              AND EXISTS(SELECT 1 FROM CS_SALESTRANSACTION txn 
--                          JOIN CS_GASALESTRANSACTION etxn ON
--                            etxn.SALESTRANSACTIONSEQ = txn.SALESTRANSACTIONSEQ
--                            AND etxn.TENANTID = txn.TENANTID
--                            AND etxn.PAGENUMBER = 0
--                          JOIN CS_CREDIT cdt ON
--                            cdt.SALESTRANSACTIONSEQ = txn.SALESTRANSACTIONSEQ
--                            AND cdt.TENANTID = txn.TENANTID
--                        WHERE etxn.GENERICATTRIBUTE1 = p3.ATTRIBUTE26 --billing account
--                          AND txn.GENERICATTRIBUTE29 = p3.ATTRIBUTE43 --event source/service identifier
--                          AND ADD_MONTHS(cdt.COMPENSATIONDATE,9) <= TO_DATE(p3.EFFECTIVE_DATE,'dd/mm/yyyy hh24:mi:ss')
--                          AND txn.TENANTID = 'TELS')
--         THEN 'Early Recontract from NLIP'
--         ELSE p3.ATTRIBUTE53
--         END ATTRIBUTE53,
    p3.ATTRIBUTE53,
    p3.ATTRIBUTE54,p3.ATTRIBUTE55,p3.ATTRIBUTE56,p3.ATTRIBUTE57,p3.ATTRIBUTE58,p3.ATTRIBUTE59,p3.ATTRIBUTE60,p3.ATTRIBUTE61,p3.ATTRIBUTE62,p3.ATTRIBUTE63,p3.ATTRIBUTE64,p3.ATTRIBUTE65,p3.ATTRIBUTE66,p3.ATTRIBUTE67,p3.ATTRIBUTE68,
    p3.ATTRIBUTE69,p3.ATTRIBUTE70,p3.ATTRIBUTE71,p3.ATTRIBUTE72,p3.ATTRIBUTE73,p3.ATTRIBUTE74,p3.ATTRIBUTE75,p3.ATTRIBUTE76,p3.ATTRIBUTE77,p3.ATTRIBUTE78,
--    CASE WHEN p3.ATTRIBUTE78 = 'Recon - Previous Uncontracted' 
--              AND EXISTS(SELECT 1 FROM CS_SALESTRANSACTION txn 
--                          JOIN CS_GASALESTRANSACTION etxn ON
--                            etxn.SALESTRANSACTIONSEQ = txn.SALESTRANSACTIONSEQ
--                            AND etxn.TENANTID = txn.TENANTID
--                            AND etxn.PAGENUMBER = 0
--                          JOIN CS_CREDIT cdt ON
--                            cdt.SALESTRANSACTIONSEQ = txn.SALESTRANSACTIONSEQ
--                            AND cdt.TENANTID = txn.TENANTID
--                        WHERE etxn.GENERICATTRIBUTE1 = p3.ATTRIBUTE26 --billing account
--                          AND txn.GENERICATTRIBUTE29 = p3.ATTRIBUTE43 --event source/service identifier
--                          AND ADD_MONTHS(cdt.COMPENSATIONDATE,9) <= TO_DATE(p3.EFFECTIVE_DATE,'dd/mm/yyyy hh24:mi:ss')
--                          AND txn.TENANTID = 'TELS')
--              AND EXISTS(SELECT 1 FROM LT_PPM_Casual lt WHERE lt.IDX_NAME_1 = p3.ATTRIBUTE81 AND lt.STARTDATE <= TO_DATE(NVL(p3.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss') AND lt.ENDDATE > TO_DATE(NVL(p3.EFFECTIVE_DATE, '01/01/2200 00:00:00'),'dd/mm/yyyy hh24:mi:ss'))
--         THEN 'Yes'
--         ELSE TO_CHAR(p3.ATTRIBUTE79)
--         END ATTRIBUTE79,
    CASE WHEN p3.ATTRIBUTE78 IN('NPF Recontract','NPF ARP Recontract')
         THEN 'No'
         ELSE p3.ATTRIBUTE79
         END ATTRIBUTE79,
    p3.ATTRIBUTE80,p3.ATTRIBUTE81,p3.ATTRIBUTE82,p3.ATTRIBUTE83,p3.ATTRIBUTE84,p3.ATTRIBUTE85,p3.ATTRIBUTE86,p3.ATTRIBUTE87,
    p3.ATTRIBUTE88,p3.ATTRIBUTE89,p3.ATTRIBUTE90,p3.ATTRIBUTE91,p3.ATTRIBUTE92,p3.ATTRIBUTE93,p3.ATTRIBUTE94,p3.ATTRIBUTE95,p3.ATTRIBUTE96,p3.ATTRIBUTE97,p3.ATTRIBUTE98,p3.ATTRIBUTE99,p3.ATTRIBUTE100,p3.LAST_UPDATE_DATE,p3.CREATION_DATE,p3.BOOKED_DATE,p3.REVENUE_TYPE,p3.TYPE,
    p3.EMPLOYEE_NUMBER,p3.RECORD_STATUS,p3.ERROR_TYPE,p3.ERROR_MSG,p3.SOURCE,p3.FILENAME,p3.RECORDNUMBER,p3.SUBMITTED_DATE,p3.STATUS_HEADER,p3.STATUS_ORDER_LINE_ITEM
FROM PASS3 p3
--WHERE p3.FILENAME = '$$filename'
;

SELECT C_ATTRIBUTE25, C_ATTRIBUTE46, O_ATTRIBUTE78, C_ATTRIBUTE78, O_ATTRIBUTE94, C_ATTRIBUTE94 FROM TEST_PREPROC_COMPARISON WHERE COMPARE_ATTRIBUTE78 = 0 AND O_ATTRIBUTE78 = 'DLC Recontract'; 

SELECT * FROM TELS_SUBMITTED_ORDERS_VIEW WHERE ROW_ID = '1-NTKNQI66';
SELECT * FROM TELS_SUBMITTED_ORDERS_VIEW WHERE ORDER_NUMBER = '1-1866710865747';
SELECT * FROM TEST_PREPROC_COMPARISON WHERE C_ATTRIBUTE46 = '1-MR14XH9H';
SELECT ROW_ID, ROOT_ITEM_ROW_ID, ATTRIBUTE_ROW_ID, ATTRIBUTE_DISPLAY_NAME, ATTRIBUTE_VALUE FROM TELS_PRESTAGE_RCRM WHERE order_number = '1-1782206976338';
SELECT * FROM TELS_STAGE_RCRM_PPE WHERE ATTRIBUTE46 = '1-NUG3CVLV';

SELECT lt.STARTDATE, lt.ENDDATE, lt.DIM_NAME_0, lt.IDX_NAME_0, lt.DIM_NAME_1, lt.IDX_NAME_1, lt.VALUE
    FROM TELS_RCRM_MV_MDLT lt
    WHERE NAME = 'LT_PPM_Casual' AND lt.IDX_NAME_1 = 'VMP0000185';
