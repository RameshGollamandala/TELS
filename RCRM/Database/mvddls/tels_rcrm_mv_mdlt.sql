DROP MATERIALIZED VIEW TELS_RCRM_MV_MDLT;

DROP TABLE TELS_RCRM_MV_MDLT CASCADE CONSTRAINTS;

CREATE TABLE TELS_RCRM_MV_MDLT
(
    NAME        VARCHAR2(127)  -- CS_RELATIONALMDLT.NAME
  , STARTDATE   DATE           -- CS_MDLTCELL.EFFECTIVESTARTDATE
  , ENDDATE     DATE           -- CS_MDLTCELL.EFFECTIVEENDDATE
  , DIM_NAME_0  VARCHAR2(127)  -- CS_MDLTDIMENSION.NAME
  , IDX_NAME_0  VARCHAR2(255)  -- CS_MDLTINDEX.MINSTRING
  , DIM_NAME_1  VARCHAR2(127)  -- CS_MDLTDIMENSION.NAME
  , IDX_NAME_1  VARCHAR2(255)  -- CS_MDLTINDEX.MINSTRING
  , DIM_NAME_2  VARCHAR2(127)  -- CS_MDLTDIMENSION.NAME
  , IDX_NAME_2  VARCHAR2(255)  -- CS_MDLTINDEX.MINSTRING
  , DIM_NAME_3  VARCHAR2(127)  -- CS_MDLTDIMENSION.NAME
  , IDX_NAME_3  VARCHAR2(255)  -- CS_MDLTINDEX.MINSTRING
  , DIM_NAME_4  VARCHAR2(127)  -- CS_MDLTDIMENSION.NAME
  , IDX_NAME_4  VARCHAR2(255)  -- CS_MDLTINDEX.MINSTRING
  , DIM_NAME_5  VARCHAR2(127)  -- CS_MDLTDIMENSION.NAME
  , IDX_NAME_5  VARCHAR2(255)  -- CS_MDLTINDEX.MINSTRING
  , DIM_NAME_6  VARCHAR2(127)  -- CS_MDLTDIMENSION.NAME
  , IDX_NAME_6  VARCHAR2(255)  -- CS_MDLTINDEX.MINSTRING
  , DIM_NAME_7  VARCHAR2(127)  -- CS_MDLTDIMENSION.NAME
  , IDX_NAME_7  VARCHAR2(255)  -- CS_MDLTINDEX.MINSTRING
  , DIM_NAME_8  VARCHAR2(127)  -- CS_MDLTDIMENSION.NAME
  , IDX_NAME_8  VARCHAR2(255)  -- CS_MDLTINDEX.MINSTRING
  , VALUE       NUMBER(25,10)  -- CS_MDLTCELL.VALUE
  , STRINGVALUE NVARCHAR2(255) -- CS_MDLTCELL.STRINGVALUE
  , DATEVALUE   DATE           -- CS_MDLTCELL.DATEVALUE
)
TABLESPACE TELS_TRANSFORMS;

--DROP MATERIALIZED VIEW TELS_RCRM_MV_MDLT;

CREATE MATERIALIZED VIEW TELS_RCRM_MV_MDLT
ON PREBUILT TABLE
REFRESH COMPLETE
ON DEMAND
USING TRUSTED CONSTRAINTS
AS
WITH IDX_LIST AS (
  SELECT
    MD.RULEELEMENTSEQ AS "RULEELEMENTSEQ",
    MD.DIMENSIONSLOT AS "DIM_NUMBER",
    MD.NAME AS "DIM_NAME",
    MI.ORDINAL AS "IDX_NUMBER",
--    CASE WHEN MI.MINSTRING IS NULL THEN TO_CHAR(MI.MINVALUE) ELSE MI.MINSTRING END AS IDX_NAME,
    NVL(MI.MINSTRING,TO_CHAR(MI.MINVALUE)) AS "IDX_NAME",
    MI.EFFECTIVESTARTDATE AS "IDX_STARTDATE",
    MI.EFFECTIVEENDDATE AS "IDX_ENDDATE"
  FROM CS_MDLTDIMENSION MD
  JOIN CS_MDLTINDEX MI
    ON  MI.RULEELEMENTSEQ = MD.RULEELEMENTSEQ
    AND MI.DIMENSIONSEQ = MD.DIMENSIONSEQ
    AND MI.REMOVEDATE = TO_DATE('01/01/2200','DD/MM/YYYY')
    AND MD.REMOVEDATE = TO_DATE('01/01/2200','DD/MM/YYYY')
    AND MI.EFFECTIVESTARTDATE < MD.EFFECTIVEENDDATE
    AND MI.EFFECTIVEENDDATE > MD.EFFECTIVESTARTDATE
  )
SELECT
  RM.NAME AS "NAME",
  MC.EFFECTIVESTARTDATE AS "STARTDATE",
  MC.EFFECTIVEENDDATE AS "ENDDATE",
  I0.DIM_NAME AS "DIM_NAME_0",
  I0.IDX_NAME AS "IDX_NAME_0",
  I1.DIM_NAME AS "DIM_NAME_1",
  I1.IDX_NAME AS "IDX_NAME_1",
  I2.DIM_NAME AS "DIM_NAME_2",
  I2.IDX_NAME AS "IDX_NAME_2",
  I3.DIM_NAME AS "DIM_NAME_3",
  I3.IDX_NAME AS "IDX_NAME_3",
  I4.DIM_NAME AS "DIM_NAME_4",
  I4.IDX_NAME AS "IDX_NAME_4",
  I5.DIM_NAME AS "DIM_NAME_5",
  I5.IDX_NAME AS "IDX_NAME_5",
  I6.DIM_NAME AS "DIM_NAME_6",
  I6.IDX_NAME AS "IDX_NAME_6",
  I7.DIM_NAME AS "DIM_NAME_7",
  I7.IDX_NAME AS "IDX_NAME_7",
  I8.DIM_NAME AS "DIM_NAME_8",
  I8.IDX_NAME AS "IDX_NAME_8",
  MC.VALUE AS "VALUE",
  MC.STRINGVALUE AS "STRINGVALUE",
  MC.DATEVALUE AS "DATEVALUE"
FROM CS_RELATIONALMDLT RM
JOIN CS_MDLTCELL MC
  ON  MC.MDLTSEQ = RM.RULEELEMENTSEQ
  AND MC.REMOVEDATE = TO_DATE ('01/01/2200', 'DD/MM/YYYY')
  AND RM.ISLAST = 1
  AND RM.REMOVEDATE = TO_DATE ('01/01/2200', 'DD/MM/YYYY')
  AND MC.EFFECTIVESTARTDATE < RM.EFFECTIVEENDDATE
  AND MC.EFFECTIVEENDDATE > RM.EFFECTIVESTARTDATE
JOIN IDX_LIST I0
  ON  I0.DIM_NUMBER = 0
  AND I0.RULEELEMENTSEQ = RM.RULEELEMENTSEQ
  AND I0.IDX_NUMBER = MC.DIM0INDEX
  AND I0.IDX_STARTDATE < MC.EFFECTIVEENDDATE
  AND I0.IDX_ENDDATE > MC.EFFECTIVESTARTDATE
LEFT JOIN IDX_LIST I1
  ON  I1.DIM_NUMBER = 1
  AND I1.RULEELEMENTSEQ = RM.RULEELEMENTSEQ
  AND I1.IDX_NUMBER = MC.DIM1INDEX
  AND I1.IDX_STARTDATE < MC.EFFECTIVEENDDATE
  AND I1.IDX_ENDDATE > MC.EFFECTIVESTARTDATE
LEFT JOIN IDX_LIST I2
  ON  I2.DIM_NUMBER = 2
  AND I2.RULEELEMENTSEQ = RM.RULEELEMENTSEQ
  AND I2.IDX_NUMBER = MC.DIM2INDEX
  AND I2.IDX_STARTDATE < MC.EFFECTIVEENDDATE
  AND I2.IDX_ENDDATE > MC.EFFECTIVESTARTDATE
LEFT JOIN IDX_LIST I3
  ON  I3.DIM_NUMBER = 3
  AND I3.RULEELEMENTSEQ = RM.RULEELEMENTSEQ
  AND I3.IDX_NUMBER = MC.DIM3INDEX
  AND I3.IDX_STARTDATE < MC.EFFECTIVEENDDATE
  AND I3.IDX_ENDDATE > MC.EFFECTIVESTARTDATE
LEFT JOIN IDX_LIST I4
  ON  I4.DIM_NUMBER = 4
  AND I4.RULEELEMENTSEQ = RM.RULEELEMENTSEQ
  AND I4.IDX_NUMBER = MC.DIM4INDEX
  AND I4.IDX_STARTDATE < MC.EFFECTIVEENDDATE
  AND I4.IDX_ENDDATE > MC.EFFECTIVESTARTDATE
LEFT JOIN IDX_LIST I5
  ON  I5.DIM_NUMBER = 5
  AND I5.RULEELEMENTSEQ = RM.RULEELEMENTSEQ
  AND I5.IDX_NUMBER = MC.DIM5INDEX
  AND I5.IDX_STARTDATE < MC.EFFECTIVEENDDATE
  AND I5.IDX_ENDDATE > MC.EFFECTIVESTARTDATE
LEFT JOIN IDX_LIST I6
  ON  I6.DIM_NUMBER = 6
  AND I6.RULEELEMENTSEQ = RM.RULEELEMENTSEQ
  AND I6.IDX_NUMBER = MC.DIM6INDEX
  AND I6.IDX_STARTDATE < MC.EFFECTIVEENDDATE
  AND I6.IDX_ENDDATE > MC.EFFECTIVESTARTDATE
LEFT JOIN IDX_LIST I7
  ON  I7.DIM_NUMBER = 7
  AND I7.RULEELEMENTSEQ = RM.RULEELEMENTSEQ
  AND I7.IDX_NUMBER = MC.DIM7INDEX
  AND I7.IDX_STARTDATE < MC.EFFECTIVEENDDATE
  AND I7.IDX_ENDDATE > MC.EFFECTIVESTARTDATE
LEFT JOIN IDX_LIST I8
  ON  I8.DIM_NUMBER = 8
  AND I8.RULEELEMENTSEQ = RM.RULEELEMENTSEQ
  AND I8.IDX_NUMBER = MC.DIM8INDEX
  AND I8.IDX_STARTDATE < MC.EFFECTIVEENDDATE
  AND I8.IDX_ENDDATE > MC.EFFECTIVESTARTDATE
;

BEGIN
  DBMS_MVIEW.REFRESH( LIST => 'TELSADMIN.TELS_RCRM_MV_MDLT', METHOD => 'C' );
END;

DROP INDEX TELS_RCRM_MV_MDLT_IX_1;

CREATE INDEX TELS_RCRM_MV_MDLT_IX_1 ON TELS_RCRM_MV_MDLT
(NAME,STARTDATE,ENDDATE,IDX_NAME_0,IDX_NAME_1,IDX_NAME_2,IDX_NAME_3,IDX_NAME_4,IDX_NAME_5,IDX_NAME_6)
TABLESPACE TELS_TRANSFORMS
;

BEGIN
  DBMS_STATS.GATHER_TABLE_STATS(
--  DBMS_STATS.GATHER_INDEX_STATS(
      OWNNAME           => 'TELSADMIN'
    , TABNAME           => 'TELS_RCRM_MV_MDLT'
--    , INDNAME           => 'TELS_RCRM_MV_MDLT_IX_1'
    , ESTIMATE_PERCENT  => NULL
    , METHOD_OPT        => 'FOR ALL INDEXED COLUMNS SIZE AUTO'
    , DEGREE            => NULL
    , CASCADE           => TRUE
    , NO_INVALIDATE     => FALSE
    );
END;

